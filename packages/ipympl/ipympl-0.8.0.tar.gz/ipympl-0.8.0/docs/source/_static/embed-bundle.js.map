{"version":3,"file":"embed-bundle.js","mappings":"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","sources":["webpack://jupyter-matplotlib/external amd \"@jupyter-widgets/base\"","webpack://jupyter-matplotlib/webpack/bootstrap","webpack://jupyter-matplotlib/webpack/runtime/define property getters","webpack://jupyter-matplotlib/webpack/runtime/hasOwnProperty shorthand","webpack://jupyter-matplotlib/webpack/runtime/make namespace object","webpack://jupyter-matplotlib/./src/utils.ts","webpack://jupyter-matplotlib/./src/version.ts","webpack://jupyter-matplotlib/./src/mpl_widget.ts","webpack://jupyter-matplotlib/./src/toolbar_widget.ts"],"sourcesContent":["module.exports = __WEBPACK_EXTERNAL_MODULE__146__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// Get mouse position relative to target\nexport function get_mouse_position(event: MouseEvent, targ: HTMLElement) {\n    const boundingRect = targ.getBoundingClientRect();\n\n    return {\n        x: event.clientX - boundingRect.left,\n        y: event.clientY - boundingRect.top,\n    };\n}\n\n/*\n * return a copy of an object with only non-object keys\n * we need this to avoid circular references\n * http://stackoverflow.com/a/24161582/3208463\n */\nexport function get_simple_keys(original: any) {\n    return Object.keys(original).reduce((obj: any, key) => {\n        if (typeof original[key] !== 'object') {\n            obj[key] = original[key];\n        }\n        return obj;\n    }, {});\n}\n\n// taken from ipycanvas (https://github.com/martinRenou/ipycanvas)\n// Helpful for getting a drawing context while avoiding typescript errors about a context\n// possibly being null.\n// https://github.com/martinRenou/ipycanvas/blob/8c91ec4f634ff3661f594872e8050cf27d6db0c6/src/widget.ts#L23-L29\nexport function getContext(canvas: HTMLCanvasElement) {\n    const context = canvas.getContext('2d');\n    if (context === null) {\n        throw 'Could not create 2d context.';\n    }\n    return context;\n}\n","// eslint-disable-next-line @typescript-eslint/no-var-requires\nconst data = require('../package.json');\n\n/**\n * The _model_module_version/_view_module_version this package implements.\n *\n * The html widget manager assumes that this is the same as the npm package\n * version number.\n */\nexport const MODULE_VERSION = data.version;\n\n/*\n * The current package name.\n */\nexport const MODULE_NAME = data.name;\n","import {\n    DOMWidgetModel,\n    DOMWidgetView,\n    ISerializers,\n    unpack_models,\n} from '@jupyter-widgets/base';\nimport * as utils from './utils';\n\nimport { MODULE_VERSION } from './version';\n\nexport class MPLCanvasModel extends DOMWidgetModel {\n    offscreen_canvas: HTMLCanvasElement;\n    offscreen_context: CanvasRenderingContext2D;\n    requested_size: Array<number> | null;\n    resize_requested: boolean;\n    ratio: number;\n    waiting: any;\n    image: HTMLImageElement;\n    defaults() {\n        return {\n            ...super.defaults(),\n            _model_name: 'MPLCanvasModel',\n            _view_name: 'MPLCanvasView',\n            _model_module: 'jupyter-matplotlib',\n            _view_module: 'jupyter-matplotlib',\n            _model_module_version: '^' + MODULE_VERSION,\n            _view_module_version: '^' + MODULE_VERSION,\n            header_visible: true,\n            footer_visible: true,\n            toolbar: null,\n            toolbar_visible: true,\n            toolbar_position: 'horizontal',\n            resizable: true,\n            capture_scroll: false,\n            _width: 0,\n            _height: 0,\n            _figure_label: 'Figure',\n            _message: '',\n            _cursor: 'pointer',\n            _image_mode: 'full',\n            _rubberband_x: 0,\n            _rubberband_y: 0,\n            _rubberband_width: 0,\n            _rubberband_height: 0,\n        };\n    }\n\n    static serializers: ISerializers = {\n        ...DOMWidgetModel.serializers,\n        toolbar: { deserialize: unpack_models as any },\n    };\n\n    initialize(attributes: any, options: any) {\n        super.initialize(attributes, options);\n\n        this.offscreen_canvas = document.createElement('canvas');\n        this.offscreen_context = utils.getContext(this.offscreen_canvas);\n\n        // use `as any` to avoid typescript complaining that\n        // these browser specific attributes don't exist.\n        const context = this.offscreen_context as any;\n        const backingStore =\n            context.backingStorePixelRatio ||\n            context.webkitBackingStorePixelRatio ||\n            context.mozBackingStorePixelRatio ||\n            context.msBackingStorePixelRatio ||\n            context.oBackingStorePixelRatio ||\n            1;\n\n        this.requested_size = null;\n        this.resize_requested = false;\n        this.ratio = (window.devicePixelRatio || 1) / backingStore;\n        this._init_image();\n\n        this.on('msg:custom', this.on_comm_message.bind(this));\n        this.on('change:resizable', () => {\n            this._for_each_view((view: MPLCanvasView) => {\n                view.update_canvas();\n            });\n        });\n\n        this.send_initialization_message();\n    }\n\n    send_message(type: string, message: { [index: string]: any } = {}) {\n        message['type'] = type;\n\n        this.send(message, {});\n    }\n\n    send_initialization_message() {\n        if (this.ratio !== 1) {\n            this.send_message('set_dpi_ratio', { dpi_ratio: this.ratio });\n            this.send_message('set_device_pixel_ratio', {\n                device_pixel_ratio: this.ratio,\n            });\n        }\n\n        this.send_message('send_image_mode');\n        this.send_message('refresh');\n\n        this.send_message('initialized');\n    }\n\n    send_draw_message() {\n        if (!this.waiting) {\n            this.waiting = true;\n            this.send_message('draw');\n        }\n    }\n\n    handle_save() {\n        const save = document.createElement('a');\n        save.href = this.offscreen_canvas.toDataURL();\n        save.download = this.get('_figure_label') + '.png';\n        document.body.appendChild(save);\n        save.click();\n        document.body.removeChild(save);\n    }\n\n    handle_resize(msg: { [index: string]: any }) {\n        const size = msg['size'];\n        this.resize_canvas(size[0], size[1]);\n        this.offscreen_context.drawImage(this.image, 0, 0);\n\n        if (!this.resize_requested) {\n            this._for_each_view((view: MPLCanvasView) => {\n                view.resize_canvas(size[0], size[1]);\n            });\n        }\n\n        this.send_message('refresh');\n\n        this.resize_requested = false;\n        if (this.requested_size !== null) {\n            // Requesting saved resize\n            this.resize(this.requested_size[0], this.requested_size[1]);\n            this.requested_size = null;\n        }\n    }\n\n    resize(width: number, height: number) {\n        // Do not request a super small size, as it seems to break the back-end\n        if (width <= 5 || height <= 5) {\n            return;\n        }\n\n        this._for_each_view((view: MPLCanvasView) => {\n            // Do an initial resize of each view, stretching the old canvas.\n            view.resize_canvas(width, height);\n        });\n\n        if (this.resize_requested) {\n            // If a resize was already requested, save the requested size for later\n            this.requested_size = [width, height];\n        } else {\n            this.resize_requested = true;\n            this.send_message('resize', { width: width, height: height });\n        }\n    }\n\n    resize_canvas(width: number, height: number) {\n        this.offscreen_canvas.setAttribute('width', `${width * this.ratio}`);\n        this.offscreen_canvas.setAttribute('height', `${height * this.ratio}`);\n    }\n\n    handle_rubberband(msg: any) {\n        let x0 = msg['x0'] / this.ratio;\n        let y0 = (this.offscreen_canvas.height - msg['y0']) / this.ratio;\n        let x1 = msg['x1'] / this.ratio;\n        let y1 = (this.offscreen_canvas.height - msg['y1']) / this.ratio;\n        x0 = Math.floor(x0) + 0.5;\n        y0 = Math.floor(y0) + 0.5;\n        x1 = Math.floor(x1) + 0.5;\n        y1 = Math.floor(y1) + 0.5;\n\n        this.set('_rubberband_x', Math.min(x0, x1));\n        this.set('_rubberband_y', Math.min(y0, y1));\n        this.set('_rubberband_width', Math.abs(x1 - x0));\n        this.set('_rubberband_height', Math.abs(y1 - y0));\n        this.save_changes();\n\n        this._for_each_view((view: MPLCanvasView) => {\n            view.update_canvas();\n        });\n    }\n\n    handle_draw(_msg: any) {\n        // Request the server to send over a new figure.\n        this.send_draw_message();\n    }\n\n    handle_binary(msg: any, dataviews: any) {\n        const url_creator = window.URL || window.webkitURL;\n\n        const buffer = new Uint8Array(dataviews[0].buffer);\n        const blob = new Blob([buffer], { type: 'image/png' });\n        const image_url = url_creator.createObjectURL(blob);\n\n        // Free the memory for the previous frames\n        if (this.image.src) {\n            url_creator.revokeObjectURL(this.image.src);\n        }\n\n        this.image.src = image_url;\n\n        this.waiting = false;\n    }\n\n    on_comm_message(evt: any, dataviews: any) {\n        const msg = JSON.parse(evt.data);\n        const msg_type = msg['type'];\n        let callback;\n\n        // Call the  'handle_{type}' callback, which takes\n        // the figure and JSON message as its only arguments.\n        try {\n            callback = (this as any)['handle_' + msg_type].bind(this);\n        } catch (e) {\n            console.log(\n                \"No handler for the '\" + msg_type + \"' message type: \",\n                msg\n            );\n            return;\n        }\n\n        if (callback) {\n            callback(msg, dataviews);\n        }\n    }\n\n    _init_image() {\n        this.image = document.createElement('img');\n        this.image.onload = () => {\n            if (this.get('_image_mode') === 'full') {\n                // Full images could contain transparency (where diff images\n                // almost always do), so we need to clear the canvas so that\n                // there is no ghosting.\n                this.offscreen_context.clearRect(\n                    0,\n                    0,\n                    this.offscreen_canvas.width,\n                    this.offscreen_canvas.height\n                );\n            }\n            this.offscreen_context.drawImage(this.image, 0, 0);\n\n            this._for_each_view((view: MPLCanvasView) => {\n                view.update_canvas();\n            });\n        };\n    }\n\n    _for_each_view(callback: any) {\n        for (const view_id in this.views) {\n            this.views[view_id].then((view) => {\n                callback(view);\n            });\n        }\n    }\n\n    remove() {\n        this.send_message('closing');\n    }\n}\n\nexport class MPLCanvasView extends DOMWidgetView {\n    figure: HTMLDivElement;\n    canvas_div: HTMLDivElement;\n    canvas: HTMLCanvasElement;\n    header: HTMLDivElement;\n    toolbar_view: DOMWidgetView;\n    resize_handle_size: number;\n    resizing: boolean;\n    context: CanvasRenderingContext2D;\n    top_canvas: HTMLCanvasElement;\n    top_context: CanvasRenderingContext2D;\n    waiting: boolean;\n    footer: HTMLDivElement;\n    model: MPLCanvasModel;\n    private _key: string | null;\n    private _resize_event: (event: MouseEvent) => void;\n    private _stop_resize_event: () => void;\n    render() {\n        this.resizing = false;\n        this.resize_handle_size = 20;\n\n        this.figure = document.createElement('div');\n        this.figure.classList.add(\n            'jupyter-matplotlib-figure',\n            'jupyter-widgets',\n            'widget-container',\n            'widget-box',\n            'widget-vbox'\n        );\n\n        this._init_header();\n        this._init_canvas();\n        this._init_footer();\n\n        this._resize_event = this.resize_event.bind(this);\n        this._stop_resize_event = this.stop_resize_event.bind(this);\n        window.addEventListener('mousemove', this._resize_event);\n        window.addEventListener('mouseup', this._stop_resize_event);\n\n        this.waiting = false;\n\n        return this.create_child_view(this.model.get('toolbar')).then(\n            (toolbar_view) => {\n                this.toolbar_view = toolbar_view;\n\n                this._update_toolbar_position();\n\n                this._update_header_visible();\n                this._update_footer_visible();\n                this._update_toolbar_visible();\n\n                this.model_events();\n            }\n        );\n    }\n\n    model_events() {\n        this.model.on(\n            'change:header_visible',\n            this._update_header_visible.bind(this)\n        );\n        this.model.on(\n            'change:footer_visible',\n            this._update_footer_visible.bind(this)\n        );\n        this.model.on(\n            'change:toolbar_visible',\n            this._update_toolbar_visible.bind(this)\n        );\n        this.model.on(\n            'change:toolbar_position',\n            this._update_toolbar_position.bind(this)\n        );\n        this.model.on(\n            'change:_figure_label',\n            this._update_figure_label.bind(this)\n        );\n        this.model.on('change:_message', this._update_message.bind(this));\n        this.model.on('change:_cursor', this._update_cursor.bind(this));\n    }\n\n    _update_header_visible() {\n        this.header.style.display = this.model.get('header_visible')\n            ? ''\n            : 'none';\n    }\n\n    _update_footer_visible() {\n        this.footer.style.display = this.model.get('footer_visible')\n            ? ''\n            : 'none';\n    }\n\n    _update_toolbar_visible() {\n        this.toolbar_view.el.style.display = this.model.get('toolbar_visible')\n            ? ''\n            : 'none';\n    }\n\n    _update_toolbar_position() {\n        const toolbar_position = this.model.get('toolbar_position');\n        if (toolbar_position === 'top' || toolbar_position === 'bottom') {\n            this.el.classList.add(\n                'jupyter-widgets',\n                'widget-container',\n                'widget-box',\n                'widget-vbox',\n                'jupyter-matplotlib'\n            );\n            this.model.get('toolbar').set('orientation', 'horizontal');\n\n            this.clear();\n\n            if (toolbar_position === 'top') {\n                this.el.appendChild(this.toolbar_view.el);\n                this.el.appendChild(this.figure);\n            } else {\n                this.el.appendChild(this.figure);\n                this.el.appendChild(this.toolbar_view.el);\n            }\n        } else {\n            this.el.classList.add(\n                'jupyter-widgets',\n                'widget-container',\n                'widget-box',\n                'widget-hbox',\n                'jupyter-matplotlib'\n            );\n            this.model.get('toolbar').set('orientation', 'vertical');\n\n            this.clear();\n\n            if (toolbar_position === 'left') {\n                this.el.appendChild(this.toolbar_view.el);\n                this.el.appendChild(this.figure);\n            } else {\n                this.el.appendChild(this.figure);\n                this.el.appendChild(this.toolbar_view.el);\n            }\n        }\n    }\n\n    clear() {\n        while (this.el.firstChild) {\n            this.el.removeChild(this.el.firstChild);\n        }\n    }\n\n    _init_header() {\n        this.header = document.createElement('div');\n        this.header.style.textAlign = 'center';\n        this.header.classList.add('jupyter-widgets', 'widget-label');\n        this._update_figure_label();\n        this.figure.appendChild(this.header);\n    }\n\n    _update_figure_label() {\n        this.header.textContent = this.model.get('_figure_label');\n    }\n\n    _init_canvas() {\n        const canvas_container = document.createElement('div');\n        canvas_container.classList.add(\n            'jupyter-widgets',\n            'jupyter-matplotlib-canvas-container'\n        );\n        this.figure.appendChild(canvas_container);\n\n        const canvas_div = (this.canvas_div = document.createElement('div'));\n        canvas_div.style.position = 'relative';\n        canvas_div.style.clear = 'both';\n        canvas_div.classList.add(\n            'jupyter-widgets',\n            'jupyter-matplotlib-canvas-div'\n        );\n\n        canvas_div.addEventListener('keydown', this.key_event('key_press'));\n        canvas_div.addEventListener('keyup', this.key_event('key_release'));\n\n        // this is important to make the div 'focusable'\n        canvas_div.setAttribute('tabindex', '0');\n        canvas_container.appendChild(canvas_div);\n\n        const canvas = (this.canvas = document.createElement('canvas'));\n        canvas.style.display = 'block';\n        canvas.style.position = 'absolute';\n        canvas.style.left = '0';\n        canvas.style.top = '0';\n        canvas.style.zIndex = '0';\n\n        this.context = utils.getContext(canvas);\n\n        const top_canvas = (this.top_canvas = document.createElement('canvas'));\n        top_canvas.style.display = 'block';\n        top_canvas.style.position = 'absolute';\n        top_canvas.style.left = '0';\n        top_canvas.style.top = '0';\n        top_canvas.style.zIndex = '1';\n\n        top_canvas.addEventListener(\n            'mousedown',\n            this.mouse_event('button_press')\n        );\n        top_canvas.addEventListener(\n            'mouseup',\n            this.mouse_event('button_release')\n        );\n        top_canvas.addEventListener(\n            'mousemove',\n            this.mouse_event('motion_notify')\n        );\n\n        top_canvas.addEventListener(\n            'mouseenter',\n            this.mouse_event('figure_enter')\n        );\n        top_canvas.addEventListener(\n            'mouseleave',\n            this.mouse_event('figure_leave')\n        );\n\n        top_canvas.addEventListener('wheel', this.mouse_event('scroll'));\n\n        canvas_div.appendChild(canvas);\n        canvas_div.appendChild(top_canvas);\n\n        this.top_context = utils.getContext(top_canvas);\n        this.top_context.strokeStyle = 'rgba(0, 0, 0, 255)';\n\n        // Disable right mouse context menu.\n        this.top_canvas.addEventListener('contextmenu', (_e) => {\n            _e.preventDefault();\n            _e.stopPropagation();\n            return false;\n        });\n\n        this.resize_canvas(this.model.get('_width'), this.model.get('_height'));\n        this.update_canvas();\n    }\n\n    update_canvas() {\n        if (this.canvas.width === 0 || this.canvas.height === 0) {\n            return;\n        }\n\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        this.context.drawImage(this.model.offscreen_canvas, 0, 0);\n\n        this.top_context.clearRect(\n            0,\n            0,\n            this.top_canvas.width,\n            this.top_canvas.height\n        );\n\n        // Draw rubberband\n        if (\n            this.model.get('_rubberband_width') !== 0 &&\n            this.model.get('_rubberband_height') !== 0\n        ) {\n            this.top_context.strokeRect(\n                this.model.get('_rubberband_x'),\n                this.model.get('_rubberband_y'),\n                this.model.get('_rubberband_width'),\n                this.model.get('_rubberband_height')\n            );\n        }\n\n        // Draw resize handle\n        if (this.model.get('resizable')) {\n            this.top_context.save();\n\n            const gradient = this.top_context.createLinearGradient(\n                this.top_canvas.width - this.resize_handle_size / 3,\n                this.top_canvas.height - this.resize_handle_size / 3,\n                this.top_canvas.width - this.resize_handle_size / 4,\n                this.top_canvas.height - this.resize_handle_size / 4\n            );\n            gradient.addColorStop(0, 'rgba(0, 0, 0, 0)');\n            gradient.addColorStop(1, 'rgba(0, 0, 0, 255)');\n\n            this.top_context.fillStyle = gradient;\n\n            this.top_context.globalAlpha = 0.3;\n            this.top_context.beginPath();\n            this.top_context.moveTo(\n                this.top_canvas.width,\n                this.top_canvas.height\n            );\n            this.top_context.lineTo(\n                this.top_canvas.width,\n                this.top_canvas.height - this.resize_handle_size\n            );\n            this.top_context.lineTo(\n                this.top_canvas.width - this.resize_handle_size,\n                this.top_canvas.height\n            );\n            this.top_context.closePath();\n            this.top_context.fill();\n\n            this.top_context.restore();\n        }\n    }\n\n    _update_cursor() {\n        this.top_canvas.style.cursor = this.model.get('_cursor');\n    }\n\n    _init_footer() {\n        this.footer = document.createElement('div');\n        this.footer.style.textAlign = 'center';\n        this.footer.classList.add('jupyter-widgets', 'widget-label');\n        this._update_message();\n        this.figure.appendChild(this.footer);\n    }\n\n    _update_message() {\n        this.footer.textContent = this.model.get('_message');\n    }\n\n    resize_canvas(width: number, height: number) {\n        // Keep the size of the canvas, and rubber band canvas in sync.\n        this.canvas.setAttribute('width', `${width * this.model.ratio}`);\n        this.canvas.setAttribute('height', `${height * this.model.ratio}`);\n        this.canvas.style.width = width + 'px';\n        this.canvas.style.height = height + 'px';\n\n        this.top_canvas.setAttribute('width', String(width));\n        this.top_canvas.setAttribute('height', String(height));\n\n        this.canvas_div.style.width = width + 'px';\n        this.canvas_div.style.height = height + 'px';\n\n        this.update_canvas();\n    }\n\n    mouse_event(name: string) {\n        let last_update = 0;\n        return (event: any) => {\n            const canvas_pos = utils.get_mouse_position(event, this.top_canvas);\n\n            if (name === 'scroll') {\n                event['data'] = 'scroll';\n                if (event.deltaY < 0) {\n                    event.step = 1;\n                } else {\n                    event.step = -1;\n                }\n                if (this.model.get('capture_scroll')) {\n                    event.preventDefault();\n                }\n            }\n\n            if (name === 'button_press') {\n                // If clicking on the resize handle\n                if (\n                    canvas_pos.x >=\n                        this.top_canvas.width - this.resize_handle_size &&\n                    canvas_pos.y >=\n                        this.top_canvas.height - this.resize_handle_size &&\n                    this.model.get('resizable')\n                ) {\n                    this.resizing = true;\n                    return;\n                } else {\n                    this.canvas.focus();\n                    this.canvas_div.focus();\n                }\n            }\n\n            if (this.resizing) {\n                // Ignore other mouse events while resizing.\n                return;\n            }\n\n            if (name === 'motion_notify') {\n                // If the mouse is on the handle, change the cursor style\n                if (\n                    canvas_pos.x >=\n                        this.top_canvas.width - this.resize_handle_size &&\n                    canvas_pos.y >=\n                        this.top_canvas.height - this.resize_handle_size\n                ) {\n                    this.top_canvas.style.cursor = 'nw-resize';\n                } else {\n                    this.top_canvas.style.cursor = this.model.get('_cursor');\n                }\n            }\n\n            // Rate-limit the position text updates so that we don't overwhelm the\n            // system.\n            if (Date.now() > last_update + 16) {\n                last_update = Date.now();\n\n                const x = canvas_pos.x * this.model.ratio;\n                const y = canvas_pos.y * this.model.ratio;\n\n                this.model.send_message(name, {\n                    x: x,\n                    y: y,\n                    button: event.button,\n                    step: event.step,\n                    guiEvent: utils.get_simple_keys(event),\n                });\n            }\n        };\n    }\n\n    resize_event(event: MouseEvent) {\n        if (this.resizing) {\n            const new_size = utils.get_mouse_position(event, this.top_canvas);\n\n            this.model.resize(new_size.x, new_size.y);\n        }\n    }\n\n    stop_resize_event() {\n        this.resizing = false;\n    }\n\n    key_event(name: string) {\n        return (event: KeyboardEvent) => {\n            event.stopPropagation();\n            event.preventDefault();\n\n            // Prevent repeat events\n            if (name === 'key_press') {\n                if (event.key === this._key) {\n                    return;\n                } else {\n                    this._key = event.key;\n                }\n            }\n            if (name === 'key_release') {\n                this._key = null;\n            }\n\n            let value = '';\n            if (event.ctrlKey && event.key !== 'Control') {\n                value += 'ctrl+';\n            } else if (event.altKey && event.key !== 'Alt') {\n                value += 'alt+';\n            } else if (event.shiftKey && event.key !== 'Shift') {\n                value += 'shift+';\n            }\n\n            value += 'k' + event.key;\n            this.model.send_message(name, {\n                key: value,\n                guiEvent: utils.get_simple_keys(event),\n            });\n            return false;\n        };\n    }\n\n    remove() {\n        window.removeEventListener('mousemove', this._resize_event);\n        window.removeEventListener('mouseup', this._stop_resize_event);\n    }\n}\n","import { DOMWidgetModel, DOMWidgetView } from '@jupyter-widgets/base';\n\nimport { MODULE_VERSION } from './version';\n\nexport class ToolbarModel extends DOMWidgetModel {\n    defaults() {\n        return {\n            ...super.defaults(),\n            _model_name: 'ToolbarModel',\n            _view_name: 'ToolbarView',\n            _model_module: 'jupyter-matplotlib',\n            _view_module: 'jupyter-matplotlib',\n            _model_module_version: '^' + MODULE_VERSION,\n            _view_module_version: '^' + MODULE_VERSION,\n            toolitems: [],\n            orientation: 'vertical',\n            button_style: '',\n            collapsed: true,\n            _current_action: '',\n        };\n    }\n}\n\nexport class ToolbarView extends DOMWidgetView {\n    toggle_button: HTMLButtonElement;\n    toolbar: HTMLDivElement;\n    buttons: { [index: string]: HTMLButtonElement };\n    render(): void {\n        this.el.classList.add(\n            'jupyter-widgets',\n            'jupyter-matplotlib-toolbar',\n            'widget-container',\n            'widget-box'\n        );\n\n        this.create_toolbar();\n        this.model_events();\n    }\n\n    create_toolbar(): void {\n        const toolbar_items = this.model.get('toolitems');\n\n        this.toggle_button = document.createElement('button');\n\n        this.toggle_button.classList.add(\n            'jupyter-matplotlib-button',\n            'jupyter-widgets',\n            'jupyter-button'\n        );\n        this.toggle_button.setAttribute('href', '#');\n        this.toggle_button.setAttribute('title', 'Toggle Interaction');\n        this.toggle_button.style.outline = 'none';\n        this.toggle_button.addEventListener('click', () => {\n            this.model.set('collapsed', !this.model.get('collapsed'));\n            this.model.save_changes();\n        });\n\n        const icon = document.createElement('i');\n        icon.classList.add('center', 'fa', 'fa-fw', 'fa-bars');\n        this.toggle_button.appendChild(icon);\n\n        this.el.appendChild(this.toggle_button);\n        this.toolbar = document.createElement('div');\n        this.toolbar.classList.add('widget-container', 'widget-box');\n        this.el.appendChild(this.toolbar);\n        this.buttons = { toggle_button: this.toggle_button };\n\n        for (const toolbar_ind in toolbar_items) {\n            const name = toolbar_items[toolbar_ind][0];\n            const tooltip = toolbar_items[toolbar_ind][1];\n            const image = toolbar_items[toolbar_ind][2];\n            const method_name = toolbar_items[toolbar_ind][3];\n            if (!name) {\n                continue;\n            }\n\n            const button = document.createElement('button');\n            button.classList.add(\n                'jupyter-matplotlib-button',\n                'jupyter-widgets',\n                'jupyter-button'\n            );\n            button.setAttribute('href', '#');\n            button.setAttribute('title', tooltip);\n            button.style.outline = 'none';\n            button.addEventListener(\n                'click',\n                this.toolbar_button_onclick(method_name)\n            );\n\n            const icon = document.createElement('i');\n            icon.classList.add('center', 'fa', 'fa-fw', 'fa-' + image);\n            button.appendChild(icon);\n\n            this.buttons[method_name] = button;\n\n            this.toolbar.appendChild(button);\n        }\n\n        this.set_orientation(this.el);\n        this.set_orientation(this.toolbar);\n        this.set_buttons_style();\n    }\n\n    set_orientation(el: HTMLElement): void {\n        const orientation = this.model.get('orientation');\n        if (orientation === 'vertical') {\n            el.classList.remove('widget-hbox');\n            el.classList.add('widget-vbox');\n        } else {\n            el.classList.add('widget-hbox');\n            el.classList.remove('widget-vbox');\n        }\n    }\n\n    toolbar_button_onclick(name: string) {\n        return (_event: Event): void => {\n            // Special case for pan and zoom as they are toggle buttons\n            if (name === 'pan' || name === 'zoom') {\n                if (this.model.get('_current_action') === name) {\n                    this.model.set('_current_action', '');\n                } else {\n                    this.model.set('_current_action', name);\n                }\n                this.model.save_changes();\n            }\n\n            this.send({\n                type: 'toolbar_button',\n                name: name,\n            });\n        };\n    }\n\n    set_buttons_style(): void {\n        const class_map: { [index: string]: any } = {\n            primary: ['mod-primary'],\n            success: ['mod-success'],\n            info: ['mod-info'],\n            warning: ['mod-warning'],\n            danger: ['mod-danger'],\n        };\n\n        for (const name in this.buttons) {\n            const button = this.buttons[name];\n\n            for (const class_name in class_map) {\n                button.classList.remove(class_map[class_name]);\n            }\n            button.classList.remove('mod-active');\n\n            const class_name = this.model.get('button_style');\n            if (class_name !== '') {\n                button.classList.add(class_map[class_name]);\n            }\n\n            if (name === this.model.get('_current_action')) {\n                button.classList.add('mod-active');\n            }\n        }\n    }\n\n    update_collapsed(): void {\n        this.toolbar.style.display = this.model.get('collapsed') ? '' : 'none';\n    }\n\n    model_events(): void {\n        this.model.on('change:orientation', this.update_orientation.bind(this));\n        this.model.on_some_change(\n            ['button_style', '_current_action'],\n            this.set_buttons_style,\n            this\n        );\n        this.model.on('change:collapsed', this.update_collapsed.bind(this));\n    }\n\n    update_orientation(): void {\n        this.set_orientation(this.el);\n        this.set_orientation(this.toolbar);\n    }\n}\n"],"names":["module","exports","__WEBPACK_EXTERNAL_MODULE__146__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","get_mouse_position","event","targ","boundingRect","getBoundingClientRect","x","clientX","left","y","clientY","top","get_simple_keys","original","keys","reduce","getContext","canvas","context","data","MODULE_VERSION","version","MODULE_NAME","name","MPLCanvasModel","DOMWidgetModel","defaults","super","_model_name","_view_name","_model_module","_view_module","_model_module_version","_view_module_version","header_visible","footer_visible","toolbar","toolbar_visible","toolbar_position","resizable","capture_scroll","_width","_height","_figure_label","_message","_cursor","_image_mode","_rubberband_x","_rubberband_y","_rubberband_width","_rubberband_height","initialize","attributes","options","this","offscreen_canvas","document","createElement","offscreen_context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","requested_size","resize_requested","ratio","window","devicePixelRatio","_init_image","on","on_comm_message","bind","_for_each_view","view","update_canvas","send_initialization_message","send_message","type","message","send","dpi_ratio","device_pixel_ratio","send_draw_message","waiting","handle_save","save","href","toDataURL","download","body","appendChild","click","removeChild","handle_resize","msg","size","resize_canvas","drawImage","image","resize","width","height","setAttribute","handle_rubberband","x0","y0","x1","y1","Math","floor","set","min","abs","save_changes","handle_draw","_msg","handle_binary","dataviews","url_creator","URL","webkitURL","buffer","Uint8Array","blob","Blob","image_url","createObjectURL","src","revokeObjectURL","evt","JSON","parse","msg_type","callback","e","console","log","onload","clearRect","view_id","views","then","remove","serializers","deserialize","unpack_models","MPLCanvasView","DOMWidgetView","render","resizing","resize_handle_size","figure","classList","add","_init_header","_init_canvas","_init_footer","_resize_event","resize_event","_stop_resize_event","stop_resize_event","addEventListener","create_child_view","model","toolbar_view","_update_toolbar_position","_update_header_visible","_update_footer_visible","_update_toolbar_visible","model_events","_update_figure_label","_update_message","_update_cursor","header","style","display","footer","el","clear","firstChild","textAlign","textContent","canvas_container","canvas_div","position","key_event","zIndex","top_canvas","mouse_event","top_context","strokeStyle","_e","preventDefault","stopPropagation","strokeRect","gradient","createLinearGradient","addColorStop","fillStyle","globalAlpha","beginPath","moveTo","lineTo","closePath","fill","restore","cursor","String","last_update","canvas_pos","deltaY","step","focus","Date","now","button","guiEvent","new_size","_key","ctrlKey","altKey","shiftKey","removeEventListener","ToolbarModel","toolitems","orientation","button_style","collapsed","_current_action","ToolbarView","create_toolbar","toolbar_items","toggle_button","outline","icon","buttons","toolbar_ind","tooltip","method_name","toolbar_button_onclick","set_orientation","set_buttons_style","_event","class_map","primary","success","info","warning","danger","class_name","update_collapsed","update_orientation","on_some_change"],"sourceRoot":""}