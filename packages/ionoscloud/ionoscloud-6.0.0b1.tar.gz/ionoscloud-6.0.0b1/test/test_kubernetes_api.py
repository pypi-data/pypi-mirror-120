# coding: utf-8

"""
    CLOUD API

    IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.  # noqa: E501

    The version of the OpenAPI document: 6.0-SDK.3
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import ionoscloud
from ionoscloud.api.kubernetes_api import KubernetesApi  # noqa: E501
from ionoscloud.rest import ApiException


class TestKubernetesApi(unittest.TestCase):
    """KubernetesApi unit test stubs"""

    def setUp(self):
        self.api = ionoscloud.api.kubernetes_api.KubernetesApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_k8s_delete(self):
        """Test case for k8s_delete

        Delete Kubernetes Cluster  # noqa: E501
        """
        pass

    def test_k8s_find_by_cluster_id(self):
        """Test case for k8s_find_by_cluster_id

        Retrieve Kubernetes Cluster  # noqa: E501
        """
        pass

    def test_k8s_get(self):
        """Test case for k8s_get

        List Kubernetes Clusters  # noqa: E501
        """
        pass

    def test_k8s_kubeconfig_get(self):
        """Test case for k8s_kubeconfig_get

        Retrieve Kubernetes Configuration File  # noqa: E501
        """
        pass

    def test_k8s_nodepools_delete(self):
        """Test case for k8s_nodepools_delete

        Delete Kubernetes Node Pool  # noqa: E501
        """
        pass

    def test_k8s_nodepools_find_by_id(self):
        """Test case for k8s_nodepools_find_by_id

        Retrieve Kubernetes Node Pool  # noqa: E501
        """
        pass

    def test_k8s_nodepools_get(self):
        """Test case for k8s_nodepools_get

        List Kubernetes Node Pools  # noqa: E501
        """
        pass

    def test_k8s_nodepools_nodes_delete(self):
        """Test case for k8s_nodepools_nodes_delete

        Delete Kubernetes node  # noqa: E501
        """
        pass

    def test_k8s_nodepools_nodes_find_by_id(self):
        """Test case for k8s_nodepools_nodes_find_by_id

        Retrieve Kubernetes node  # noqa: E501
        """
        pass

    def test_k8s_nodepools_nodes_get(self):
        """Test case for k8s_nodepools_nodes_get

        Retrieve Kubernetes nodes.  # noqa: E501
        """
        pass

    def test_k8s_nodepools_nodes_replace_post(self):
        """Test case for k8s_nodepools_nodes_replace_post

        Recreate the Kubernetes node  # noqa: E501
        """
        pass

    def test_k8s_nodepools_post(self):
        """Test case for k8s_nodepools_post

        Create a Kubernetes Node Pool  # noqa: E501
        """
        pass

    def test_k8s_nodepools_put(self):
        """Test case for k8s_nodepools_put

        Modify Kubernetes Node Pool  # noqa: E501
        """
        pass

    def test_k8s_post(self):
        """Test case for k8s_post

        Create Kubernetes Cluster  # noqa: E501
        """
        pass

    def test_k8s_put(self):
        """Test case for k8s_put

        Modify Kubernetes Cluster  # noqa: E501
        """
        pass

    def test_k8s_versions_default_get(self):
        """Test case for k8s_versions_default_get

        Retrieve the current default kubernetes version for clusters and nodepools.  # noqa: E501
        """
        pass

    def test_k8s_versions_get(self):
        """Test case for k8s_versions_get

        Retrieve available Kubernetes versions  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
