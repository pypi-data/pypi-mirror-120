# coding: utf-8

"""
    CLOUD API

    IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.  # noqa: E501

    The version of the OpenAPI document: 6.0-SDK.3
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ionoscloud
from ionoscloud.models.kubernetes_node_pool_properties_for_post import KubernetesNodePoolPropertiesForPost  # noqa: E501
from ionoscloud.rest import ApiException

class TestKubernetesNodePoolPropertiesForPost(unittest.TestCase):
    """KubernetesNodePoolPropertiesForPost unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test KubernetesNodePoolPropertiesForPost
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ionoscloud.models.kubernetes_node_pool_properties_for_post.KubernetesNodePoolPropertiesForPost()  # noqa: E501
        if include_optional :
            return KubernetesNodePoolPropertiesForPost(
                name = 'k8s-node-pool',
                datacenter_id = '1e072e52-2ed3-492f-b6b6-c6b116907521',
                node_count = 2,
                cpu_family = 'AMD_OPTERON',
                cores_count = 4,
                ram_size = 2048,
                availability_zone = 'AUTO',
                storage_type = 'HDD',
                storage_size = 100,
                k8s_version = '1.15.4',
                maintenance_window = ionoscloud.models.kubernetes_maintenance_window.KubernetesMaintenanceWindow(
                    day_of_the_week = 'Monday', 
                    time = '13:00:00', ),
                auto_scaling = ionoscloud.models.kubernetes_auto_scaling.KubernetesAutoScaling(
                    min_node_count = 1, 
                    max_node_count = 1, ),
                lans = [
                    ionoscloud.models.kubernetes_node_pool_lan.KubernetesNodePoolLan(
                        id = 3, 
                        dhcp = True, 
                        routes = [
                            ionoscloud.models.kubernetes_node_pool_lan_routes.KubernetesNodePoolLanRoutes(
                                network = '1.2.3.4/24', 
                                gateway_ip = '10.1.5.16', )
                            ], )
                    ],
                labels = {
                    'key' : ''
                    },
                annotations = {
                    'key' : ''
                    },
                public_ips = [81.173.1.2, 82.231.2.5, 92.221.2.4],
                gateway_ip = '198.51.100.100'
            )
        else :
            return KubernetesNodePoolPropertiesForPost(
                name = 'k8s-node-pool',
                datacenter_id = '1e072e52-2ed3-492f-b6b6-c6b116907521',
                node_count = 2,
                cpu_family = 'AMD_OPTERON',
                cores_count = 4,
                ram_size = 2048,
                availability_zone = 'AUTO',
                storage_type = 'HDD',
                storage_size = 100,
        )

    def testKubernetesNodePoolPropertiesForPost(self):
        """Test KubernetesNodePoolPropertiesForPost"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
