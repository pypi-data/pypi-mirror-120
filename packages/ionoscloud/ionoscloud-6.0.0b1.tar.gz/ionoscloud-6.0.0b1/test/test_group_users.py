# coding: utf-8

"""
    CLOUD API

    IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.  # noqa: E501

    The version of the OpenAPI document: 6.0-SDK.3
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ionoscloud
from ionoscloud.models.group_users import GroupUsers  # noqa: E501
from ionoscloud.rest import ApiException

class TestGroupUsers(unittest.TestCase):
    """GroupUsers unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test GroupUsers
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ionoscloud.models.group_users.GroupUsers()  # noqa: E501
        if include_optional :
            return GroupUsers(
                id = '15f67991-0f51-4efc-a8ad-ef1fb31a480c',
                type = "groups",
                href = 'https://<API_HOST>/cloudapi/v6/um/users/9b1b4c62-1466-11e7-87d3-d7bb7dac0087/groups',
                items = [
                    ionoscloud.models.group.Group(
                        id = '15f67991-0f51-4efc-a8ad-ef1fb31a480c', 
                        type = "group", 
                        href = 'https://<API_HOST>/cloudapi/v6/um/groups/15f67991-0f51-4efc-a8ad-ef1fb31a480c', 
                        properties = ionoscloud.models.group_properties.GroupProperties(
                            name = 'My resource', 
                            create_data_center = True, 
                            create_snapshot = True, 
                            reserve_ip = True, 
                            access_activity_log = True, 
                            create_pcc = True, 
                            s3_privilege = True, 
                            create_backup_unit = True, 
                            create_internet_access = True, 
                            create_k8s_cluster = True, 
                            create_flow_log = True, 
                            access_and_manage_monitoring = True, 
                            access_and_manage_certificates = True, ), 
                        entities = ionoscloud.models.group_entities.GroupEntities(
                            users = ionoscloud.models.group_members.GroupMembers(
                                id = '15f67991-0f51-4efc-a8ad-ef1fb31a480c', 
                                type = "collection", 
                                href = 'https://<API_HOST>/cloudapi/v6/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/users', 
                                items = [
                                    ionoscloud.models.user.User(
                                        id = '15f67991-0f51-4efc-a8ad-ef1fb31a480c', 
                                        type = "user", 
                                        href = '<RESOURCE-URI>', 
                                        metadata = ionoscloud.models.user_metadata.UserMetadata(
                                            etag = '45480eb3fbfc31f1d916c1eaa4abdcc3', 
                                            created_date = '2015-12-04T14:34:09.809Z', 
                                            last_login = '2015-12-04T14:34:09.809Z', ), 
                                        properties = ionoscloud.models.user_properties.UserProperties(
                                            firstname = '', 
                                            lastname = '', 
                                            email = '', 
                                            administrator = True, 
                                            force_sec_auth = True, 
                                            sec_auth_active = True, 
                                            s3_canonical_user_id = '', 
                                            active = True, ), )
                                    ], ), 
                            resources = ionoscloud.models.resource_groups.ResourceGroups(
                                id = '15f67991-0f51-4efc-a8ad-ef1fb31a480c', 
                                type = "collection", 
                                href = 'https://<API_HOST>/cloudapi/v6/um/groups/30740c22-1def-11e7-aac9-d7a3646ca7fd/resources', ), ), )
                    ]
            )
        else :
            return GroupUsers(
        )

    def testGroupUsers(self):
        """Test GroupUsers"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
