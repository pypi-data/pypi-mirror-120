# coding: utf-8

"""
    CLOUD API

    IONOS Enterprise-grade Infrastructure as a Service (IaaS) solutions can be managed through the Cloud API, in addition or as an alternative to the \"Data Center Designer\" (DCD) browser-based tool.    Both methods employ consistent concepts and features, deliver similar power and flexibility, and can be used to perform a multitude of management tasks, including adding servers, volumes, configuring networks, and so on.  # noqa: E501

    The version of the OpenAPI document: 6.0-SDK.3
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import ionoscloud
from ionoscloud.models.label_properties import LabelProperties  # noqa: E501
from ionoscloud.rest import ApiException

class TestLabelProperties(unittest.TestCase):
    """LabelProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test LabelProperties
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = ionoscloud.models.label_properties.LabelProperties()  # noqa: E501
        if include_optional :
            return LabelProperties(
                key = 'environment',
                value = 'production',
                resource_id = '700e1cab-99b2-4c30-ba8c-1d273ddba022',
                resource_type = 'datacenter',
                resource_href = 'https://<hostname>/datacenters/700e1cab-99b2-4c30-ba8c-1d273ddba022'
            )
        else :
            return LabelProperties(
        )

    def testLabelProperties(self):
        """Test LabelProperties"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
