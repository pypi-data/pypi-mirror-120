{"version":3,"file":"chunks/app_components_projects_missingProjectMembership_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/teams.tsx","webpack:///./app/components/projects/missingProjectMembership.tsx"],"sourcesContent":["import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport {tct} from 'app/locale';\nimport {Team} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {uniqueId} from 'app/utils/guid';\n\ntype CallbackOptions = {\n  success?: Function;\n  error?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\ntype TeamData = {data: Team};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(\n  api: Client,\n  params: OrgAndTeamSlug & TeamData,\n  options: CallbackOptions\n) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {joinTeam} from 'app/actionCreators/teams';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport SelectControl from 'app/components/forms/selectControl';\nimport {Panel} from 'app/components/panels';\nimport {IconFlag} from 'app/icons';\nimport {t} from 'app/locale';\nimport TeamStore from 'app/stores/teamStore';\nimport space from 'app/styles/space';\nimport {Organization, Project} from 'app/types';\nimport withApi from 'app/utils/withApi';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  projectSlug?: string;\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  team: string | null;\n  project?: Project;\n};\n\nclass MissingProjectMembership extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    const {organization, projectSlug} = this.props;\n    const project = organization.projects?.find(p => p.slug === projectSlug);\n\n    this.state = {\n      loading: false,\n      error: false,\n      project,\n      team: '',\n    };\n  }\n\n  joinTeam(teamSlug: string) {\n    this.setState({\n      loading: true,\n    });\n\n    joinTeam(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        teamId: teamSlug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(t('Request to join team sent.'));\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(t('There was an error while trying to request access.'));\n        },\n      }\n    );\n  }\n\n  renderJoinTeam(teamSlug: string, features: Set<string>) {\n    const team = TeamStore.getBySlug(teamSlug);\n\n    if (!team) {\n      return null;\n    }\n    if (this.state.loading) {\n      if (features.has('open-membership')) {\n        return <Button busy>{t('Join Team')}</Button>;\n      }\n      return <Button busy>{t('Request Access')}</Button>;\n    } else if (team?.isPending) {\n      return <Button disabled>{t('Request Pending')}</Button>;\n    } else if (features.has('open-membership')) {\n      return (\n        <Button\n          priority=\"primary\"\n          type=\"button\"\n          onClick={this.joinTeam.bind(this, teamSlug)}\n        >\n          {t('Join Team')}\n        </Button>\n      );\n    }\n    return (\n      <Button\n        priority=\"primary\"\n        type=\"button\"\n        onClick={this.joinTeam.bind(this, teamSlug)}\n      >\n        {t('Request Access')}\n      </Button>\n    );\n  }\n\n  getTeamsForAccess() {\n    const request: string[] = [];\n    const pending: string[] = [];\n    const teams = this.state.project?.teams ?? [];\n    teams.forEach(({slug}) => {\n      const team = TeamStore.getBySlug(slug);\n      if (!team) {\n        return;\n      }\n      team.isPending ? pending.push(team.slug) : request.push(team.slug);\n    });\n\n    return [request, pending];\n  }\n\n  getPendingTeamOption = (team: string) => {\n    return {\n      value: team,\n      label: <DisabledLabel>{t(`#${team}`)}</DisabledLabel>,\n    };\n  };\n\n  render() {\n    const {organization} = this.props;\n    const teamSlug = this.state.team;\n    const teams = this.state.project?.teams ?? [];\n    const features = new Set(organization.features);\n\n    const teamAccess = [\n      {\n        label: t('Request Access'),\n        options: this.getTeamsForAccess()[0].map(request => ({\n          value: request,\n          label: t(`#${request}`),\n        })),\n      },\n      {\n        label: t('Pending Requests'),\n        options: this.getTeamsForAccess()[1].map(pending =>\n          this.getPendingTeamOption(pending)\n        ),\n      },\n    ];\n\n    return (\n      <StyledPanel>\n        {!teams.length ? (\n          <EmptyMessage icon={<IconFlag size=\"xl\" />}>\n            {t(\n              'No teams have access to this project yet. Ask an admin to add your team to this project.'\n            )}\n          </EmptyMessage>\n        ) : (\n          <EmptyMessage\n            icon={<IconFlag size=\"xl\" />}\n            title={t(\"You're not a member of this project.\")}\n            description={t(\n              `You'll need to join a team with access before you can view this data.`\n            )}\n            action={\n              <Field>\n                <StyledSelectControl\n                  name=\"select\"\n                  placeholder={t('Select a Team')}\n                  options={teamAccess}\n                  onChange={teamObj => {\n                    const team = teamObj ? teamObj.value : null;\n                    this.setState({team});\n                  }}\n                />\n                {teamSlug ? (\n                  this.renderJoinTeam(teamSlug, features)\n                ) : (\n                  <Button disabled>{t('Select a Team')}</Button>\n                )}\n              </Field>\n            }\n          />\n        )}\n      </StyledPanel>\n    );\n  }\n}\n\nconst StyledPanel = styled(Panel)`\n  margin: ${space(2)} 0;\n`;\n\nconst Field = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(2)};\n  text-align: left;\n`;\n\nconst StyledSelectControl = styled(SelectControl)`\n  width: 250px;\n`;\n\nconst DisabledLabel = styled('div')`\n  display: flex;\n  opacity: 0.5;\n  overflow: hidden;\n`;\n\nexport {MissingProjectMembership};\n\nexport default withApi(MissingProjectMembership);\n"],"names":["doCallback","params","name","args","callIfFunction","fetchTeamDetails","api","options","TeamActions","teamId","request","orgId","success","data","error","updateTeamSuccess","updateTeam","endpoint","method","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","addSuccessMessage","tct","slug","organization","err","addErrorMessage","removeTeam","MissingProjectMembership","Component","constructor","props","super","value","label","DisabledLabel","t","projectSlug","this","project","projects","find","p","state","loading","teamSlug","setState","renderJoinTeam","features","TeamStore","has","busy","isPending","disabled","priority","type","onClick","bind","getTeamsForAccess","pending","teams","forEach","push","render","Set","teamAccess","map","getPendingTeamOption","StyledPanel","length","icon","size","title","description","action","Field","StyledSelectControl","placeholder","onChange","teamObj","Panel","space","SelectControl","withApi"],"sourceRoot":""}