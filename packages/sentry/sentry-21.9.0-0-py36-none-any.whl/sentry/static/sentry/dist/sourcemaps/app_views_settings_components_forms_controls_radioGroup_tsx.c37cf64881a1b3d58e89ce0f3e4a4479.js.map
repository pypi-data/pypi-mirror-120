{"version":3,"file":"chunks/app_views_settings_components_forms_controls_radioGroup_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"spBAOA,MAAMA,GAAY,OAAO,MAAP,qBAAH,0BAEDC,IAAKC,EAAAA,EAAAA,GAAMD,EAAEE,aAAe,EAAI,IAF/B,oBAGKF,GAAMA,EAAEE,aAAe,SAAW,OAHvC,8DA0BTC,EAAa,EACjBC,MAAAA,EACAC,SAAAA,EACAC,QAAAA,EACAC,MAAAA,EACAC,SAAAA,EACAN,aAAAA,KACGO,MAEH,QAACV,EAAD,CACEG,aAAcA,KACVO,EACJC,KAAK,aACL,kBAAiBH,EAJnB,UAMID,GAAW,IAAIK,KAAI,EAAEC,EAAIC,EAAMC,GAAcC,KAC7C,QAACC,EAAD,CAEEN,KAAK,QACLK,MAAOA,EACP,eAAcX,IAAUQ,EACxBP,SAAUA,EALZ,WAOE,QAAC,IAAD,CACE,aAAYO,EACZP,SAAUA,EACVY,QAASb,IAAUQ,EACnBJ,SAAWU,IACRb,GAAYG,EAASI,EAAIM,MAG9B,QAACC,EAAD,CAAed,SAAUA,EAAzB,SAAoCQ,IACnCC,IACC,QAAC,WAAD,YAEE,mBACA,QAACM,EAAD,UAAcN,SAnBbC,OAjBPZ,EAAAA,YAAAA,aA4CN,MAAMkB,EAAqBrB,GACZ,iBAANA,IAAmB,CAAC,WAAY,WAAWsB,SAAStB,KAAMuB,EAAAA,EAAAA,GAAYvB,GAElEgB,GAAgB,OAAO,QAAP,CAAiBK,kBAAAA,EAAjB,oBAAH,wGAQdrB,GAAMA,EAAEK,SAAW,UAAY,WARjB,8CAcpBc,GAAgB,OAAO,MAAP,CAAeE,kBAAAA,EAAf,oBAAH,YACNrB,GAAMA,EAAEK,SAAW,GAAM,MADnB,KAIbe,GAAc,OAAO,MAAP,qBAAH,UACNpB,GAAKA,EAAEwB,MAAMC,SADP,eAEFzB,GAAKA,EAAEwB,MAAME,uBAFX,uBAMjB","sources":["webpack:///./app/views/settings/components/forms/controls/radioGroup.tsx"],"sourcesContent":["import * as React from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport Radio from 'app/components/radio';\nimport space from 'app/styles/space';\n\nconst Container = styled('div')<{orientInline?: boolean}>`\n  display: grid;\n  grid-gap: ${p => space(p.orientInline ? 3 : 1)};\n  grid-auto-flow: ${p => (p.orientInline ? 'column' : 'row')};\n  grid-auto-rows: max-content;\n  grid-auto-columns: max-content;\n`;\n\ntype RadioGroupProps<C extends string> = {\n  label: string;\n  disabled?: boolean;\n  /**\n   * An array of [id, name, description]\n   */\n  choices: [C, React.ReactNode, React.ReactNode?][];\n  value: string | number | null;\n  onChange: (id: C, e: React.FormEvent<HTMLInputElement>) => void;\n  /**\n   * Switch the radio items to flow left to right, instead of vertically.\n   */\n  orientInline?: boolean;\n};\n\ntype Props<C extends string> = RadioGroupProps<C> &\n  Omit<React.ComponentPropsWithoutRef<typeof Container>, keyof RadioGroupProps<C>>;\n\nconst RadioGroup = <C extends string>({\n  value,\n  disabled,\n  choices,\n  label,\n  onChange,\n  orientInline,\n  ...props\n}: Props<C>) => (\n  <Container\n    orientInline={orientInline}\n    {...props}\n    role=\"radiogroup\"\n    aria-labelledby={label}\n  >\n    {(choices || []).map(([id, name, description], index) => (\n      <RadioLineItem\n        key={index}\n        role=\"radio\"\n        index={index}\n        aria-checked={value === id}\n        disabled={disabled}\n      >\n        <Radio\n          aria-label={id}\n          disabled={disabled}\n          checked={value === id}\n          onChange={(e: React.FormEvent<HTMLInputElement>) =>\n            !disabled && onChange(id, e)\n          }\n        />\n        <RadioLineText disabled={disabled}>{name}</RadioLineText>\n        {description && (\n          <React.Fragment>\n            {/* If there is a description then we want to have a 2x2 grid so the first column width aligns with Radio Button */}\n            <div />\n            <Description>{description}</Description>\n          </React.Fragment>\n        )}\n      </RadioLineItem>\n    ))}\n  </Container>\n);\n\nconst shouldForwardProp = (p: PropertyKey) =>\n  typeof p === 'string' && !['disabled', 'animate'].includes(p) && isPropValid(p);\n\nexport const RadioLineItem = styled('label', {shouldForwardProp})<{\n  disabled?: boolean;\n  index: number;\n}>`\n  display: grid;\n  grid-gap: 0.25em 0.5em;\n  grid-template-columns: max-content auto;\n  align-items: center;\n  cursor: ${p => (p.disabled ? 'default' : 'pointer')};\n  outline: none;\n  font-weight: normal;\n  margin: 0;\n`;\n\nconst RadioLineText = styled('div', {shouldForwardProp})<{disabled?: boolean}>`\n  opacity: ${p => (p.disabled ? 0.4 : null)};\n`;\n\nconst Description = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4em;\n`;\n\nexport default RadioGroup;\n"],"names":["Container","p","space","orientInline","RadioGroup","value","disabled","choices","label","onChange","props","role","map","id","name","description","index","RadioLineItem","checked","e","RadioLineText","Description","shouldForwardProp","includes","isPropValid","theme","gray300","fontSizeRelativeSmall"],"sourceRoot":""}