{"version":3,"file":"chunks/app_views_teamInsights_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"0YAWA,SAASA,GAAsB,SAACC,EAAD,aAAWC,IACxC,OACE,QAAC,IAAD,CAASA,aAAcA,EAAcC,SAAU,CAAC,iBAAhD,UACE,QAAC,EAAAC,SAAD,UACGH,IAAYI,EAAAA,EAAAA,gBAAeJ,IACxBK,EAAAA,EAAAA,cAAaL,EAAU,CACrBC,aAAAA,IAEFD,MARHD,EAAAA,YAAAA,wBAcT,SAAeO,EAAAA,EAAAA,GAAiBP","sources":["webpack:///./app/views/teamInsights/index.tsx"],"sourcesContent":["import {cloneElement, Fragment, isValidElement} from 'react';\n\nimport Feature from 'app/components/acl/feature';\nimport {Organization} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype Props = {\n  organization: Organization;\n  children?: React.ReactNode;\n};\n\nfunction TeamInsightsContainer({children, organization}: Props) {\n  return (\n    <Feature organization={organization} features={['team-insights']}>\n      <Fragment>\n        {children && isValidElement(children)\n          ? cloneElement(children, {\n              organization,\n            })\n          : children}\n      </Fragment>\n    </Feature>\n  );\n}\n\nexport default withOrganization(TeamInsightsContainer);\n"],"names":["TeamInsightsContainer","children","organization","features","Fragment","isValidElement","cloneElement","withOrganization"],"sourceRoot":""}