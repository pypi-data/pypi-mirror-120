{"version":3,"file":"chunks/app_views_dashboardsV2_create_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"2vBAoBA,SAASA,EAAgBC,GACvB,MAAM,SAACC,GAAYD,EASbE,GAAYC,EAAAA,EAAAA,IAAeC,EAAAA,IAC3BC,GAAYC,EAAAA,EAAAA,IAAyBL,EAASM,OAIpD,OAHIF,GACFG,EAAAA,eAAAA,QAAuBP,EAASQ,WAGhC,QAAC,IAAD,CACEC,SAAU,CAAC,mBACXC,aAAcX,EAAMW,aACpBC,eAjBJ,WACE,OACE,QAAC,KAAD,WACE,QAAC,IAAD,CAAOC,KAAK,UAAZ,UAAuBC,EAAAA,EAAAA,GAAE,8CAW7B,UAKE,QAAC,IAAD,IACMd,EACJe,aAAcC,EAAAA,EAAAA,OACdd,UAAWA,EACXe,WAAY,GACZZ,UAAWA,MA1BVN,EAAAA,YAAAA,kBAgCT,SAAemB,EAAAA,EAAAA,GAAiBnB","sources":["webpack:///./app/views/dashboardsV2/create.tsx"],"sourcesContent":["import React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\n\nimport Feature from 'app/components/acl/feature';\nimport Alert from 'app/components/alert';\nimport {t} from 'app/locale';\nimport {PageContent} from 'app/styles/organization';\nimport {Organization} from 'app/types';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport {EMPTY_DASHBOARD} from './data';\nimport DashboardDetail from './detail';\nimport {DashboardState} from './types';\nimport {cloneDashboard, constructWidgetFromQuery} from './utils';\n\ntype Props = RouteComponentProps<{orgId: string}, {}> & {\n  organization: Organization;\n  children: React.ReactNode;\n};\n\nfunction CreateDashboard(props: Props) {\n  const {location} = props;\n  function renderDisabled() {\n    return (\n      <PageContent>\n        <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n      </PageContent>\n    );\n  }\n\n  const dashboard = cloneDashboard(EMPTY_DASHBOARD);\n  const newWidget = constructWidgetFromQuery(location.query);\n  if (newWidget) {\n    browserHistory.replace(location.pathname);\n  }\n  return (\n    <Feature\n      features={['dashboards-edit']}\n      organization={props.organization}\n      renderDisabled={renderDisabled}\n    >\n      <DashboardDetail\n        {...props}\n        initialState={DashboardState.CREATE}\n        dashboard={dashboard}\n        dashboards={[]}\n        newWidget={newWidget}\n      />\n    </Feature>\n  );\n}\n\nexport default withOrganization(CreateDashboard);\n"],"names":["CreateDashboard","props","location","dashboard","cloneDashboard","EMPTY_DASHBOARD","newWidget","constructWidgetFromQuery","query","browserHistory","pathname","features","organization","renderDisabled","type","t","initialState","DashboardState","dashboards","withOrganization"],"sourceRoot":""}