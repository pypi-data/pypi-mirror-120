{"version":3,"file":"chunks/app_components_activity_note_index_tsx-app_components_activity_note_inputWithStorage_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/activity/note/body.tsx","webpack:///./app/components/activity/note/editorTools.tsx","webpack:///./app/components/activity/note/header.tsx","webpack:///./app/components/activity/note/index.tsx","webpack:///./app/components/activity/note/mentionables.tsx","webpack:///./app/components/activity/note/mentionStyle.tsx","webpack:///./app/components/activity/note/input.tsx","webpack:///./app/components/activity/note/inputWithStorage.tsx","webpack:///./app/components/links/linkWithConfirmation.tsx","webpack:///./app/utils/marked.tsx"],"sourcesContent":["import marked from 'app/utils/marked';\n\ntype Props = {\n  text: string;\n  className?: string;\n};\n\nconst NoteBody = ({className, text}: Props) => (\n  <div\n    className={className}\n    data-test-id=\"activity-note-body\"\n    dangerouslySetInnerHTML={{__html: marked(text)}}\n  />\n);\n\nexport default NoteBody;\n","import styled from '@emotion/styled';\n\nconst EditorTools = styled('span')`\n  display: none;\n`;\n\nexport default EditorTools;\n","import styled from '@emotion/styled';\n\nimport ActivityAuthor from 'app/components/activity/author';\nimport LinkWithConfirmation from 'app/components/links/linkWithConfirmation';\nimport Tooltip from 'app/components/tooltip';\nimport {t} from 'app/locale';\nimport ConfigStore from 'app/stores/configStore';\nimport {User} from 'app/types';\nimport {Theme} from 'app/utils/theme';\n\nimport EditorTools from './editorTools';\n\ntype Props = {\n  authorName: string;\n  user: User;\n  onEdit: () => void;\n  onDelete: () => void;\n};\n\nconst NoteHeader = ({authorName, user, onEdit, onDelete}: Props) => {\n  const activeUser = ConfigStore.get('user');\n  const canEdit = activeUser && (activeUser.isSuperuser || user.id === activeUser.id);\n\n  return (\n    <div>\n      <ActivityAuthor>{authorName}</ActivityAuthor>\n      {canEdit && (\n        <EditorTools>\n          <Tooltip\n            title={t('You can edit this comment due to your superuser status')}\n            disabled={!activeUser.isSuperuser}\n          >\n            <Edit onClick={onEdit}>{t('Edit')}</Edit>\n          </Tooltip>\n          <Tooltip\n            title={t('You can delete this comment due to your superuser status')}\n            disabled={!activeUser.isSuperuser}\n          >\n            <LinkWithConfirmation\n              title={t('Remove')}\n              message={t('Are you sure you wish to delete this comment?')}\n              onConfirm={onDelete}\n            >\n              <Remove>{t('Remove')}</Remove>\n            </LinkWithConfirmation>\n          </Tooltip>\n        </EditorTools>\n      )}\n    </div>\n  );\n};\n\nconst getActionStyle = (p: {theme: Theme}) => `\n  padding: 0 7px;\n  color: ${p.theme.gray200};\n  font-weight: normal;\n`;\n\nconst Edit = styled('a')`\n  ${getActionStyle};\n  margin-left: 7px;\n\n  &:hover {\n    color: ${p => p.theme.gray300};\n  }\n`;\n\nconst Remove = styled('span')`\n  ${getActionStyle};\n  border-left: 1px solid ${p => p.theme.border};\n\n  &:hover {\n    color: ${p => p.theme.error};\n  }\n`;\n\nexport default NoteHeader;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport ActivityItem, {ActivityAuthorType} from 'app/components/activity/item';\nimport space from 'app/styles/space';\nimport {User} from 'app/types';\nimport {NoteType} from 'app/types/alerts';\nimport {ActivityType} from 'app/views/alerts/types';\n\nimport NoteBody from './body';\nimport EditorTools from './editorTools';\nimport NoteHeader from './header';\nimport NoteInput from './input';\n\ntype Props = {\n  /**\n   * String for author name to be displayed in header\n   * This is not completely derived from `props.user` because we can set a default from parent component\n   */\n  authorName: string;\n  /**\n   * This is the id of the note object from the server\n   * This is to indicate you are editing an existing item\n   */\n  modelId: string;\n  /**\n   * The note text itself\n   */\n  text: string;\n  user: User;\n  dateCreated: Date | string;\n  /**\n   * pass through to ActivityItem\n   * shows absolute time instead of a relative string\n   */\n  showTime: boolean;\n  /**\n   * min-height for NoteInput textarea\n   */\n  minHeight: number;\n  /**\n   * If used, will fetch list of teams/members that can be mentioned for projects\n   */\n  projectSlugs: string[];\n  onUpdate: (data: NoteType, props: Props) => void;\n  onDelete: (props: Props) => void;\n  onCreate?: (data: NoteType) => void;\n  /**\n   * This is unusual usage that Alert Details uses to get\n   * back the activity that an input was bound to as the onUpdate and onDelete\n   * actions forward this component's props.\n   */\n  activity?: ActivityType;\n  /**\n   * pass through to ActivityItem\n   * hides the date/timestamp in header\n   */\n  hideDate?: boolean;\n};\n\ntype State = {\n  editing: boolean;\n};\n\nclass Note extends Component<Props, State> {\n  state: State = {\n    editing: false,\n  };\n\n  handleEdit = () => {\n    this.setState({editing: true});\n  };\n\n  handleEditFinish = () => {\n    this.setState({editing: false});\n  };\n\n  handleDelete = () => {\n    const {onDelete} = this.props;\n\n    onDelete(this.props);\n  };\n\n  handleCreate = (note: NoteType) => {\n    const {onCreate} = this.props;\n\n    if (onCreate) {\n      onCreate(note);\n    }\n  };\n\n  handleUpdate = (note: NoteType) => {\n    const {onUpdate} = this.props;\n\n    onUpdate(note, this.props);\n    this.setState({editing: false});\n  };\n\n  render() {\n    const {\n      modelId,\n      user,\n      dateCreated,\n      text,\n      authorName,\n      hideDate,\n      minHeight,\n      showTime,\n      projectSlugs,\n    } = this.props;\n\n    const activityItemProps = {\n      hideDate,\n      showTime,\n      id: `activity-item-${modelId}`,\n      author: {\n        type: 'user' as ActivityAuthorType,\n        user,\n      },\n      date: dateCreated,\n    };\n\n    if (!this.state.editing) {\n      return (\n        <ActivityItemWithEditing\n          {...activityItemProps}\n          header={\n            <NoteHeader\n              authorName={authorName}\n              user={user}\n              onEdit={this.handleEdit}\n              onDelete={this.handleDelete}\n            />\n          }\n        >\n          <NoteBody text={text} />\n        </ActivityItemWithEditing>\n      );\n    }\n\n    // When editing, `NoteInput` has its own header, pass render func\n    // to control rendering of bubble body\n    return (\n      <StyledActivityItem {...activityItemProps}>\n        {() => (\n          <NoteInput\n            modelId={modelId}\n            minHeight={minHeight}\n            text={text}\n            onEditFinish={this.handleEditFinish}\n            onUpdate={this.handleUpdate}\n            onCreate={this.handleCreate}\n            projectSlugs={projectSlugs}\n          />\n        )}\n      </StyledActivityItem>\n    );\n  }\n}\n\nconst StyledActivityItem = styled(ActivityItem)`\n  /* this was nested under \".activity-note.activity-bubble\" */\n  ul {\n    list-style: disc;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  p,\n  ul:not(.nav),\n  ol,\n  pre,\n  hr,\n  blockquote {\n    margin-bottom: ${space(2)};\n  }\n\n  ul:not(.nav),\n  ol {\n    padding-left: 20px;\n  }\n\n  p {\n    a {\n      word-wrap: break-word;\n    }\n  }\n\n  blockquote {\n    font-size: 15px;\n    background: ${p => p.theme.gray200};\n\n    p:last-child {\n      margin-bottom: 0;\n    }\n  }\n`;\n\nconst ActivityItemWithEditing = styled(StyledActivityItem)`\n  &:hover {\n    ${EditorTools} {\n      display: inline-block;\n    }\n  }\n`;\n\nexport default Note;\n","import * as React from 'react';\nimport uniqBy from 'lodash/uniqBy';\n\nimport MemberListStore from 'app/stores/memberListStore';\nimport {Organization, Project, User} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {isRenderFunc} from 'app/utils/isRenderFunc';\nimport Projects from 'app/utils/projects';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport {Mentionable} from './types';\n\nconst buildUserId = (id: string) => `user:${id}`;\nconst buildTeamId = (id: string) => `team:${id}`;\n\ntype ChildFuncProps = {\n  members: Mentionable[];\n  teams: Mentionable[];\n};\n\ntype Props = {\n  me: User;\n  organization: Organization;\n  projectSlugs: string[];\n  children: (props: ChildFuncProps) => React.ReactNode;\n};\n\ntype State = {\n  members: User[];\n};\n\n/**\n * Make sure the actionCreator, `fetchOrgMembers`, has been called somewhere\n * higher up the component chain.\n *\n * Will provide a list of users and teams that can be used for @-mentions\n * */\nclass Mentionables extends React.PureComponent<Props, State> {\n  state: State = {\n    members: MemberListStore.getAll(),\n  };\n\n  componentWillUnmount() {\n    this.listeners.forEach(callIfFunction);\n  }\n\n  listeners = [\n    MemberListStore.listen((users: User[]) => {\n      this.handleMemberListUpdate(users);\n    }, undefined),\n  ];\n\n  handleMemberListUpdate = (members: User[]) => {\n    if (members === this.state.members) {\n      return;\n    }\n\n    this.setState({\n      members,\n    });\n  };\n\n  getMemberList(memberList: User[], sessionUser: User): Mentionable[] {\n    const members = uniqBy(memberList, ({id}) => id).filter(\n      ({id}) => !sessionUser || sessionUser.id !== id\n    );\n    return members.map(member => ({\n      id: buildUserId(member.id),\n      display: member.name,\n      email: member.email,\n    }));\n  }\n\n  getTeams(projects: Project[]): Mentionable[] {\n    const uniqueTeams = uniqBy(\n      projects\n        .map(({teams}) => teams)\n        .reduce((acc, teams) => acc.concat(teams || []), []),\n      'id'\n    );\n\n    return uniqueTeams.map(team => ({\n      id: buildTeamId(team.id),\n      display: `#${team.slug}`,\n      email: team.id,\n    }));\n  }\n\n  renderChildren = ({projects}) => {\n    const {children, me} = this.props;\n    if (isRenderFunc<ChildFuncProps>(children)) {\n      return children({\n        members: this.getMemberList(this.state.members, me),\n        teams: this.getTeams(projects),\n      });\n    }\n    return null;\n  };\n\n  render() {\n    const {organization, projectSlugs} = this.props;\n\n    if (!projectSlugs || !projectSlugs.length) {\n      return this.renderChildren({projects: []});\n    }\n\n    return (\n      <Projects slugs={projectSlugs} orgId={organization.slug}>\n        {this.renderChildren}\n      </Projects>\n    );\n  }\n}\n\nexport default withOrganization(Mentionables);\n","import space from 'app/styles/space';\n\n/**\n * Note this is an object for `react-mentions` component and\n * not a styled component/emotion style\n */\nexport default function mentionStyle({theme, minHeight}) {\n  return {\n    control: {\n      backgroundColor: `${theme.background}`,\n      fontSize: 15,\n      fontWeight: 'normal',\n    },\n\n    input: {\n      margin: 0,\n    },\n\n    '&singleLine': {\n      control: {\n        display: 'inline-block',\n        width: 130,\n      },\n\n      highlighter: {\n        padding: 1,\n        border: '2px inset transparent',\n      },\n\n      input: {\n        padding: 1,\n        border: '2px inset',\n      },\n    },\n\n    '&multiLine': {\n      control: {\n        fontFamily: 'Rubik, Avenir Next, Helvetica Neue, sans-serif',\n        minHeight,\n      },\n\n      highlighter: {\n        padding: 20,\n        minHeight,\n      },\n\n      input: {\n        padding: `${space(1.5)} ${space(2)} 0`,\n        minHeight,\n        overflow: 'auto',\n        outline: 0,\n        border: 0,\n      },\n    },\n\n    suggestions: {\n      list: {\n        maxHeight: 150,\n        overflow: 'auto',\n        backgroundColor: `${theme.background}`,\n        border: '1px solid rgba(0,0,0,0.15)',\n        fontSize: 12,\n      },\n\n      item: {\n        padding: '5px 15px',\n        borderBottom: '1px solid rgba(0,0,0,0.15)',\n\n        '&focused': {\n          backgroundColor: `${theme.backgroundSecondary}`,\n        },\n      },\n    },\n  };\n}\n","import * as React from 'react';\nimport {Mention, MentionsInput, MentionsInputProps} from 'react-mentions';\nimport {withTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport Button from 'app/components/button';\nimport NavTabs from 'app/components/navTabs';\nimport {IconMarkdown} from 'app/icons';\nimport {t} from 'app/locale';\nimport ConfigStore from 'app/stores/configStore';\nimport space from 'app/styles/space';\nimport textStyles from 'app/styles/text';\nimport {NoteType} from 'app/types/alerts';\nimport marked from 'app/utils/marked';\nimport {Theme} from 'app/utils/theme';\n\nimport Mentionables from './mentionables';\nimport mentionStyle from './mentionStyle';\nimport {CreateError, Mentionable, MentionChangeEvent, Mentioned} from './types';\n\nconst defaultProps = {\n  placeholder: t('Add a comment.\\nTag users with @, or teams with #'),\n  minHeight: 140,\n  busy: false,\n};\n\ntype Props = {\n  teams: Mentionable[];\n  memberList: Mentionable[];\n  /**\n   * This is the id of the note object from the server\n   * This is to indicate you are editing an existing item\n   */\n  modelId?: string;\n  /**\n   * The note text itself\n   */\n  text?: string;\n  error?: boolean;\n  errorJSON?: CreateError | null;\n  onEditFinish?: () => void;\n  onUpdate?: (data: NoteType) => void;\n  onCreate?: (data: NoteType) => void;\n  onChange?: (e: MentionChangeEvent, extra: {updating?: boolean}) => void;\n  theme: Theme;\n} & typeof defaultProps;\n\ntype State = {\n  preview: boolean;\n  value: string;\n  memberMentions: Mentioned[];\n  teamMentions: Mentioned[];\n};\n\nclass NoteInputComponent extends React.Component<Props, State> {\n  state: State = {\n    preview: false,\n    value: this.props.text || '',\n    memberMentions: [],\n    teamMentions: [],\n  };\n\n  cleanMarkdown(text: string) {\n    return text\n      .replace(/\\[sentry\\.strip:member\\]/g, '@')\n      .replace(/\\[sentry\\.strip:team\\]/g, '');\n  }\n\n  submitForm() {\n    if (!!this.props.modelId) {\n      this.update();\n      return;\n    }\n    this.create();\n  }\n\n  create() {\n    const {onCreate} = this.props;\n\n    if (onCreate) {\n      onCreate({\n        text: this.cleanMarkdown(this.state.value),\n        mentions: this.finalizeMentions(),\n      });\n    }\n  }\n\n  update() {\n    const {onUpdate} = this.props;\n\n    if (onUpdate) {\n      onUpdate({\n        text: this.cleanMarkdown(this.state.value),\n        mentions: this.finalizeMentions(),\n      });\n    }\n  }\n\n  finish() {\n    this.props.onEditFinish && this.props.onEditFinish();\n  }\n\n  finalizeMentions(): string[] {\n    const {memberMentions, teamMentions} = this.state;\n\n    // each mention looks like [id, display]\n    return [...memberMentions, ...teamMentions]\n      .filter(mention => this.state.value.indexOf(mention[1]) !== -1)\n      .map(mention => mention[0]);\n  }\n\n  handleToggleEdit = () => {\n    this.setState({preview: false});\n  };\n\n  handleTogglePreview = () => {\n    this.setState({preview: true});\n  };\n\n  handleSubmit = (e: React.MouseEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    this.submitForm();\n  };\n\n  handleChange: MentionsInputProps['onChange'] = e => {\n    this.setState({value: e.target.value});\n\n    if (this.props.onChange) {\n      this.props.onChange(e, {updating: !!this.props.modelId});\n    }\n  };\n\n  handleKeyDown: MentionsInputProps['onKeyDown'] = e => {\n    // Auto submit the form on [meta] + Enter\n    if (e.key === 'Enter' && (e.metaKey || e.ctrlKey)) {\n      this.submitForm();\n    }\n  };\n\n  handleCancel = (e: React.MouseEvent<Element>) => {\n    e.preventDefault();\n    this.finish();\n  };\n\n  handleAddMember = (id: React.ReactText, display: string) => {\n    this.setState(({memberMentions}) => ({\n      memberMentions: [...memberMentions, [`${id}`, display]],\n    }));\n  };\n\n  handleAddTeam = (id: React.ReactText, display: string) => {\n    this.setState(({teamMentions}) => ({\n      teamMentions: [...teamMentions, [`${id}`, display]],\n    }));\n  };\n\n  render() {\n    const {preview, value} = this.state;\n    const {modelId, busy, placeholder, minHeight, errorJSON, memberList, teams, theme} =\n      this.props;\n\n    const existingItem = !!modelId;\n    const btnText = existingItem ? t('Save Comment') : t('Post Comment');\n\n    const errorMessage =\n      (errorJSON &&\n        (typeof errorJSON.detail === 'string'\n          ? errorJSON.detail\n          : (errorJSON.detail && errorJSON.detail.message) ||\n            t('Unable to post comment'))) ||\n      null;\n\n    return (\n      <NoteInputForm\n        data-test-id=\"note-input-form\"\n        noValidate\n        onSubmit={this.handleSubmit}\n      >\n        <NoteInputNavTabs>\n          <NoteInputNavTab className={!preview ? 'active' : ''}>\n            <NoteInputNavTabLink onClick={this.handleToggleEdit}>\n              {existingItem ? t('Edit') : t('Write')}\n            </NoteInputNavTabLink>\n          </NoteInputNavTab>\n          <NoteInputNavTab className={preview ? 'active' : ''}>\n            <NoteInputNavTabLink onClick={this.handleTogglePreview}>\n              {t('Preview')}\n            </NoteInputNavTabLink>\n          </NoteInputNavTab>\n          <MarkdownTab>\n            <IconMarkdown />\n            <MarkdownSupported>{t('Markdown supported')}</MarkdownSupported>\n          </MarkdownTab>\n        </NoteInputNavTabs>\n\n        <NoteInputBody>\n          {preview ? (\n            <NotePreview\n              minHeight={minHeight}\n              dangerouslySetInnerHTML={{__html: marked(this.cleanMarkdown(value))}}\n            />\n          ) : (\n            <MentionsInput\n              style={mentionStyle({theme, minHeight})}\n              placeholder={placeholder}\n              onChange={this.handleChange}\n              onKeyDown={this.handleKeyDown}\n              value={value}\n              required\n              autoFocus\n            >\n              <Mention\n                trigger=\"@\"\n                data={memberList}\n                onAdd={this.handleAddMember}\n                displayTransform={(_id, display) => `@${display}`}\n                markup=\"**[sentry.strip:member]__display__**\"\n                appendSpaceOnAdd\n              />\n              <Mention\n                trigger=\"#\"\n                data={teams}\n                onAdd={this.handleAddTeam}\n                markup=\"**[sentry.strip:team]__display__**\"\n                appendSpaceOnAdd\n              />\n            </MentionsInput>\n          )}\n        </NoteInputBody>\n\n        <Footer>\n          <div>{errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}</div>\n          <div>\n            {existingItem && (\n              <FooterButton priority=\"danger\" type=\"button\" onClick={this.handleCancel}>\n                {t('Cancel')}\n              </FooterButton>\n            )}\n            <FooterButton error={errorMessage} type=\"submit\" disabled={busy}>\n              {btnText}\n            </FooterButton>\n          </div>\n        </Footer>\n      </NoteInputForm>\n    );\n  }\n}\n\nconst NoteInput = withTheme(NoteInputComponent);\n\ntype NoteInputContainerProps = {\n  projectSlugs: string[];\n} & Omit<Props, 'memberList' | 'teams' | 'theme'>;\n\ntype MentionablesChildFunc = Parameters<\n  React.ComponentProps<typeof Mentionables>['children']\n>[0];\n\nclass NoteInputContainer extends React.Component<NoteInputContainerProps> {\n  static defaultProps = defaultProps;\n\n  renderInput = ({members, teams}: MentionablesChildFunc) => {\n    const {projectSlugs: _, ...props} = this.props;\n    return <NoteInput memberList={members} teams={teams} {...props} />;\n  };\n\n  render() {\n    const {projectSlugs} = this.props;\n    const me = ConfigStore.get('user');\n\n    return (\n      <Mentionables me={me} projectSlugs={projectSlugs}>\n        {this.renderInput}\n      </Mentionables>\n    );\n  }\n}\n\nexport default NoteInputContainer;\n\ntype NotePreviewProps = {\n  minHeight: Props['minHeight'];\n  theme: Props['theme'];\n};\n// This styles both the note preview and the note editor input\nconst getNotePreviewCss = (p: NotePreviewProps) => {\n  const {minHeight, padding, overflow, border} = mentionStyle(p)['&multiLine'].input;\n\n  return `\n  max-height: 1000px;\n  max-width: 100%;\n  ${(minHeight && `min-height: ${minHeight}px`) || ''};\n  padding: ${padding};\n  overflow: ${overflow};\n  border: ${border};\n`;\n};\n\nconst getNoteInputErrorStyles = (p: {error?: string; theme: Theme}) => {\n  if (!p.error) {\n    return '';\n  }\n\n  return `\n  color: ${p.theme.error};\n  margin: -1px;\n  border: 1px solid ${p.theme.error};\n  border-radius: ${p.theme.borderRadius};\n\n    &:before {\n      display: block;\n      content: '';\n      width: 0;\n      height: 0;\n      border-top: 7px solid transparent;\n      border-bottom: 7px solid transparent;\n      border-right: 7px solid ${p.theme.red300};\n      position: absolute;\n      left: -7px;\n      top: 12px;\n    }\n\n    &:after {\n      display: block;\n      content: '';\n      width: 0;\n      height: 0;\n      border-top: 6px solid transparent;\n      border-bottom: 6px solid transparent;\n      border-right: 6px solid #fff;\n      position: absolute;\n      left: -5px;\n      top: 12px;\n    }\n  `;\n};\n\nconst NoteInputForm = styled('form')<{error?: string}>`\n  font-size: 15px;\n  line-height: 22px;\n  transition: padding 0.2s ease-in-out;\n\n  ${p => getNoteInputErrorStyles(p)}\n`;\n\nconst NoteInputBody = styled('div')`\n  ${textStyles}\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  border-top: 1px solid ${p => p.theme.border};\n  justify-content: space-between;\n  transition: opacity 0.2s ease-in-out;\n  padding-left: ${space(1.5)};\n`;\n\ntype FooterButtonProps = {\n  error?: string | null;\n} & React.ComponentProps<typeof Button>;\n\nconst FooterButton = styled(Button)<FooterButtonProps>`\n  font-size: 13px;\n  margin: -1px -1px -1px;\n  border-radius: 0 0 ${p => p.theme.borderRadius};\n\n  ${p =>\n    p.error &&\n    `\n  &, &:active, &:focus, &:hover {\n  border-bottom-color: ${p.theme.error};\n  border-right-color: ${p.theme.error};\n  }\n  `}\n`;\n\nconst ErrorMessage = styled('span')`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  color: ${p => p.theme.error};\n  font-size: 0.9em;\n`;\n\nconst NoteInputNavTabs = styled(NavTabs)`\n  padding: ${space(1)} ${space(2)} 0;\n  border-bottom: 1px solid ${p => p.theme.border};\n  margin-bottom: 0;\n`;\n\nconst NoteInputNavTab = styled('li')`\n  margin-right: 13px;\n`;\n\nconst NoteInputNavTabLink = styled('a')`\n  .nav-tabs > li > & {\n    font-size: 15px;\n    padding-bottom: 5px;\n  }\n`;\nconst MarkdownTab = styled(NoteInputNavTab)`\n  .nav-tabs > & {\n    display: flex;\n    align-items: center;\n    margin-right: 0;\n    color: ${p => p.theme.subText};\n\n    float: right;\n  }\n`;\n\nconst MarkdownSupported = styled('span')`\n  margin-left: ${space(0.5)};\n  font-size: 14px;\n`;\n\nconst NotePreview = styled('div')<{minHeight: Props['minHeight']}>`\n  ${p => getNotePreviewCss(p)};\n  padding-bottom: ${space(1)};\n`;\n","import * as React from 'react';\nimport * as Sentry from '@sentry/react';\nimport debounce from 'lodash/debounce';\n\nimport NoteInput from 'app/components/activity/note/input';\nimport {MentionChangeEvent} from 'app/components/activity/note/types';\nimport {NoteType} from 'app/types/alerts';\nimport localStorage from 'app/utils/localStorage';\n\nconst defaultProps = {\n  /**\n   * Triggered when local storage has been loaded and parsed.\n   */\n  onLoad: (data: string) => data,\n  onSave: (data: string) => data,\n};\n\ntype InputProps = React.ComponentProps<typeof NoteInput>;\n\ntype Props = {\n  storageKey: string;\n  itemKey: string;\n  text?: string;\n} & InputProps &\n  typeof defaultProps;\n\nclass NoteInputWithStorage extends React.Component<Props> {\n  static defaultProps = defaultProps;\n\n  fetchFromStorage() {\n    const {storageKey} = this.props;\n\n    const storage = localStorage.getItem(storageKey);\n    if (!storage) {\n      return null;\n    }\n\n    try {\n      return JSON.parse(storage);\n    } catch (err) {\n      Sentry.withScope(scope => {\n        scope.setExtra('storage', storage);\n        Sentry.captureException(err);\n      });\n      return null;\n    }\n  }\n\n  saveToStorage(obj: Record<string, any>) {\n    const {storageKey} = this.props;\n\n    try {\n      localStorage.setItem(storageKey, JSON.stringify(obj));\n    } catch (err) {\n      Sentry.captureException(err);\n      Sentry.withScope(scope => {\n        scope.setExtra('storage', obj);\n        Sentry.captureException(err);\n      });\n    }\n  }\n\n  getValue() {\n    const {itemKey, text, onLoad} = this.props;\n\n    if (text) {\n      return text;\n    }\n\n    const storageObj = this.fetchFromStorage();\n\n    if (!storageObj) {\n      return '';\n    }\n\n    if (!storageObj.hasOwnProperty(itemKey)) {\n      return '';\n    }\n    if (!onLoad) {\n      return storageObj[itemKey];\n    }\n\n    return onLoad(storageObj[itemKey]);\n  }\n\n  save = debounce(value => {\n    const {itemKey, onSave} = this.props;\n\n    const currentObj = this.fetchFromStorage() || {};\n    this.saveToStorage({...currentObj, [itemKey]: onSave(value)});\n  }, 150);\n\n  handleChange = (e: MentionChangeEvent, options: {updating?: boolean} = {}) => {\n    const {onChange} = this.props;\n\n    if (onChange) {\n      onChange(e, options);\n    }\n\n    if (options.updating) {\n      return;\n    }\n\n    this.save(e.target.value);\n  };\n\n  /**\n   * Handler when note is created.\n   *\n   * Remove in progress item from local storage if it exists\n   */\n  handleCreate = (data: NoteType) => {\n    const {itemKey, onCreate} = this.props;\n\n    if (onCreate) {\n      onCreate(data);\n    }\n\n    // Remove from local storage\n    const storageObj = this.fetchFromStorage() || {};\n\n    // Nothing from this `itemKey` is saved to storage, do nothing\n    if (!storageObj.hasOwnProperty(itemKey)) {\n      return;\n    }\n\n    // Remove `itemKey` from stored object and save to storage\n    // eslint-disable-next-line no-unused-vars\n    const {[itemKey]: _oldItem, ...newStorageObj} = storageObj;\n    this.saveToStorage(newStorageObj);\n  };\n\n  render() {\n    // Make sure `this.props` does not override `onChange` and `onCreate`\n    return (\n      <NoteInput\n        {...this.props}\n        text={this.getValue()}\n        onCreate={this.handleCreate}\n        onChange={this.handleChange}\n      />\n    );\n  }\n}\n\nexport default NoteInputWithStorage;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\n\ntype Props = {\n  message: React.ReactNode;\n  title: string;\n  onConfirm: () => void;\n  disabled?: boolean;\n  className?: string;\n  priority?: React.ComponentProps<typeof Button>['priority'];\n};\n\n/**\n * <Confirm> is a more generic version of this component\n */\nclass LinkWithConfirmation extends React.PureComponent<Props> {\n  render() {\n    const {className, disabled, title, children, ...otherProps} = this.props;\n    return (\n      <Confirm {...otherProps} disabled={disabled}>\n        <a href=\"#\" className={classNames(className || '', {disabled})} title={title}>\n          {children}\n        </a>\n      </Confirm>\n    );\n  }\n}\n\nexport default LinkWithConfirmation;\n","import dompurify from 'dompurify';\nimport marked from 'marked'; // eslint-disable-line no-restricted-imports\n\nimport {IS_ACCEPTANCE_TEST, NODE_ENV} from 'app/constants';\n\n// Only https and mailto, (e.g. no javascript, vbscript, data protocols)\nconst safeLinkPattern = /^(https?:|mailto:)/i;\n\nconst safeImagePattern = /^https?:\\/\\/./i;\n\nfunction isSafeHref(href: string, pattern: RegExp) {\n  try {\n    return pattern.test(decodeURIComponent(unescape(href)));\n  } catch {\n    return false;\n  }\n}\n\n/**\n * Implementation of marked.Renderer which additonally sanitizes URLs.\n */\nclass SafeRenderer extends marked.Renderer {\n  link(href: string, title: string, text: string) {\n    // For a bad link, just return the plain text href\n    if (!isSafeHref(href, safeLinkPattern)) {\n      return href;\n    }\n\n    const out = `<a href=\"${href}\"${title ? ` title=\"${title}\"` : ''}>${text}</a>`;\n    return dompurify.sanitize(out);\n  }\n\n  image(href: string, title: string, text: string) {\n    // For a bad image, return an empty string\n    if (this.options.sanitize && !isSafeHref(href, safeImagePattern)) {\n      return '';\n    }\n\n    return `<img src=\"${href}\" alt=\"${text}\"${title ? ` title=\"${title}\"` : ''} />`;\n  }\n}\n\nclass NoParagraphRenderer extends SafeRenderer {\n  paragraph(text: string) {\n    return text;\n  }\n}\n\nmarked.setOptions({\n  renderer: new SafeRenderer(),\n  sanitize: true,\n\n  // Silence sanitize deprecation warning in test / ci (CI sets NODE_NV\n  // to production, but specifies `CI`).\n  //\n  // [!!] This has the side effect of causing failed markdown content to render\n  //      as a html error, instead of throwing an exception, however none of\n  //      our tests are rendering failed markdown so this is likely a safe\n  //      tradeoff to turn off off the deprecation warning.\n  silent: !!IS_ACCEPTANCE_TEST || NODE_ENV === 'test',\n});\n\nconst sanitizedMarked = (...args: Parameters<typeof marked>) =>\n  dompurify.sanitize(marked(...args));\n\nconst singleLineRenderer = (text: string, options: marked.MarkedOptions = {}) =>\n  sanitizedMarked(text, {...options, renderer: new NoParagraphRenderer()});\n\nexport {singleLineRenderer};\nexport default sanitizedMarked;\n"],"names":["NoteBody","className","text","dangerouslySetInnerHTML","__html","marked","NoteHeader","authorName","user","onEdit","onDelete","activeUser","ConfigStore","canEdit","isSuperuser","id","title","t","disabled","Edit","onClick","message","onConfirm","Remove","getActionStyle","p","theme","gray200","gray300","border","error","Note","Component","editing","this","setState","props","note","onCreate","onUpdate","render","modelId","dateCreated","hideDate","minHeight","showTime","projectSlugs","activityItemProps","author","type","date","state","StyledActivityItem","onEditFinish","handleEditFinish","handleUpdate","handleCreate","ActivityItemWithEditing","header","handleEdit","handleDelete","ActivityItem","space","EditorTools","Mentionables","React","members","MemberListStore","users","handleMemberListUpdate","undefined","projects","children","me","isRenderFunc","getMemberList","teams","getTeams","componentWillUnmount","listeners","forEach","callIfFunction","memberList","sessionUser","uniqBy","filter","map","member","display","name","email","reduce","acc","concat","team","slug","organization","length","slugs","orgId","renderChildren","withOrganization","mentionStyle","control","backgroundColor","background","fontSize","fontWeight","input","margin","width","highlighter","padding","fontFamily","overflow","outline","suggestions","list","maxHeight","item","borderBottom","backgroundSecondary","defaultProps","placeholder","busy","NoteInputComponent","preview","value","memberMentions","teamMentions","e","preventDefault","submitForm","target","onChange","updating","key","metaKey","ctrlKey","finish","cleanMarkdown","replace","update","create","mentions","finalizeMentions","mention","indexOf","errorJSON","existingItem","btnText","errorMessage","detail","NoteInputForm","noValidate","onSubmit","handleSubmit","NoteInputNavTabs","NoteInputNavTab","NoteInputNavTabLink","handleToggleEdit","handleTogglePreview","MarkdownTab","MarkdownSupported","NoteInputBody","NotePreview","style","handleChange","onKeyDown","handleKeyDown","required","autoFocus","trigger","data","onAdd","handleAddMember","displayTransform","_id","markup","appendSpaceOnAdd","handleAddTeam","Footer","ErrorMessage","FooterButton","priority","handleCancel","NoteInput","withTheme","NoteInputContainer","_","renderInput","borderRadius","red300","getNoteInputErrorStyles","textStyles","Button","NavTabs","subText","getNotePreviewCss","NoteInputWithStorage","debounce","itemKey","onSave","currentObj","fetchFromStorage","saveToStorage","options","save","storageObj","hasOwnProperty","_oldItem","newStorageObj","storageKey","storage","localStorage","JSON","parse","err","Sentry","scope","setExtra","obj","stringify","getValue","onLoad","LinkWithConfirmation","otherProps","href","classNames","safeLinkPattern","safeImagePattern","isSafeHref","pattern","test","decodeURIComponent","unescape","SafeRenderer","link","out","dompurify","image","sanitize","NoParagraphRenderer","paragraph","renderer","silent","IS_ACCEPTANCE_TEST","NODE_ENV","sanitizedMarked","args","singleLineRenderer"],"sourceRoot":""}