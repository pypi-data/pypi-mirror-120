{"version":3,"file":"chunks/app_views_settings_organizationRateLimits_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"kdA2BA,SAASA,EAA0BC,EAAOC,GACxC,MAAqC,mBAAtBA,EAAMC,aAA8BD,EAAMC,YAAYF,IAAWA,EAGnE,SAASG,GAAW,mBACjCC,EAAqBL,EADY,SAEjCM,KACGC,IAEH,MAAMC,EACgB,mBAAbF,EAA0BA,EAASC,GAAcD,EAEpDJ,EAA6B,IAC9BK,EACHD,SAAUE,EACVH,mBAAAA,GAGF,OACE,QAAC,IAAD,IACMH,EACJO,MAAO,EAAEC,SAAUC,EAAeC,OAAAA,EAAQX,MAAAA,KAAUY,MAClD,QAAC,IAAD,IACMA,EACJZ,MAAOA,EACPW,OAAQA,EACRF,SAAU,CAACI,EAAKC,IAlC1B,SACEJ,EACAV,EACAe,GAEAL,EAAcV,EAAOe,GA6BaN,CAASC,EAAeG,EAAKC,OAtBzCX,EAAAA,YAAAA,c,wnBChBxB,MAiBMa,EAjBqB,MACzB,MAAMC,EAAkB,GACxB,IAAIC,EAAI,EACR,KAAOA,GAAK,KACVD,EAAME,KAAKD,GAETA,GADEA,EAAI,IACD,IACIA,EAAI,IACR,IAEA,IAGT,OAAOD,GAIyBG,G,gDAElC,MAAMC,EAAwB,EAAEC,aAAAA,MAG9B,MAAM,MAACC,GAASD,GACV,QAACE,EAAD,gBAAUC,EAAV,aAA2BC,EAA3B,aAAyCC,GAAgBJ,EACzDK,EAAc,CAClBC,iBAAkBH,GAAgB,IAClCI,iBAAkBH,GAGpB,OACE,0BACE,QAAC,IAAD,CAAoBI,OAAOC,EAAAA,EAAAA,GAAE,kBAE7B,QAAC,KAAD,YACE,QAAC,KAAD,WAAcA,EAAAA,EAAAA,GAAE,oBAChB,QAAC,IAAD,YACE,QAAC,KAAD,CAAYC,KAAK,OAAjB,UACGD,EAAAA,EAAAA,GAAE,+MAKL,QAAC,IAAD,CACE,eAAa,oBACbE,YAAU,EACVC,WAAS,EACTC,UAAU,MACVC,YAAW,yBAAoBf,EAAagB,KAAjC,KACXV,YAAaA,EANf,UAQIJ,GAoBA,QAAC,IAAD,CACEe,OAAOP,EAAAA,EAAAA,GAAE,iBACTQ,MAAMR,EAAAA,EAAAA,GACJ,2EAHJ,UAME,QAAC,IAAD,CAAWS,IAAG,EAAd,UACGC,EAAAA,EAAAA,IACC,0FACA,CACElB,QAAAA,EACAC,gBAAAA,SA9BR,QAAC,IAAD,CACEkB,KAAK,mBACLJ,OAAOP,EAAAA,EAAAA,GAAE,iBACTY,IAAK,EACLC,IAAK,IACLC,cAAe9B,EACfwB,MAAMR,EAAAA,EAAAA,GACJ,2EAEFe,YAAY,WACZ7C,YAAaF,GACVA,GAEG0C,EAAAA,EAAAA,IAAI,oBAAqB,CACvBM,OAAQhD,EAAMiD,oBAFhBjB,EAAAA,EAAAA,GAAE,eAwBZ,QAAC,IAAD,CACEW,KAAK,mBACLJ,OAAOP,EAAAA,EAAAA,GAAE,qBACTQ,MAAMR,EAAAA,EAAAA,GACJ,mGAEFkB,KAAM,EACNN,IAAK,GACLC,IAAK,IACL3C,YAAaF,GACD,MAAVA,EAAA,UACKA,EADL,MAGE,gBACEmD,wBAAyB,CAACC,OAAQ,GAAF,QAAKpB,EAAAA,EAAAA,GAAE,YAAP,mCAlF9CX,EAAAA,YAAAA,wBA8FN,UCtHA,GAAegC,EAAAA,EAAAA,IAHbpD,GACKA,EAAMqB,cAAsB,QAAC,EAAD,IAA4BrB,IAAnC","sources":["webpack:///./app/views/settings/components/forms/rangeField.tsx","webpack:///./app/views/settings/organizationRateLimits/organizationRateLimits.tsx","webpack:///./app/views/settings/organizationRateLimits/index.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport RangeSlider from 'app/views/settings/components/forms/controls/rangeSlider';\nimport InputField, {onEvent} from 'app/views/settings/components/forms/inputField';\n\ntype DefaultProps = {\n  formatMessageValue?: false | Function;\n};\n\ntype DisabledFunction = (props: Omit<Props, 'formatMessageValue'>) => boolean;\ntype PlaceholderFunction = (props: any) => React.ReactNode;\n\ntype Props = DefaultProps &\n  Omit<React.ComponentProps<typeof RangeSlider>, 'value' | 'disabled' | 'placeholder'> &\n  Omit<InputField['props'], 'disabled' | 'field'> & {\n    disabled?: boolean | DisabledFunction;\n    placeholder?: string | PlaceholderFunction;\n  };\n\nfunction onChange(\n  fieldOnChange: onEvent,\n  value: number | '',\n  e: React.FormEvent<HTMLInputElement>\n) {\n  fieldOnChange(value, e);\n}\n\nfunction defaultFormatMessageValue(value, props: Props) {\n  return (typeof props.formatLabel === 'function' && props.formatLabel(value)) || value;\n}\n\nexport default function RangeField({\n  formatMessageValue = defaultFormatMessageValue,\n  disabled,\n  ...otherProps\n}: Props) {\n  const resolvedDisabled =\n    typeof disabled === 'function' ? disabled(otherProps) : disabled;\n\n  const props: InputField['props'] = {\n    ...otherProps,\n    disabled: resolvedDisabled,\n    formatMessageValue,\n  };\n\n  return (\n    <InputField\n      {...props}\n      field={({onChange: fieldOnChange, onBlur, value, ...fieldProps}) => (\n        <RangeSlider\n          {...fieldProps}\n          value={value}\n          onBlur={onBlur}\n          onChange={(val, event) => onChange(fieldOnChange, val, event)}\n        />\n      )}\n    />\n  );\n}\n","import {RouteComponentProps} from 'react-router';\n\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport {Organization} from 'app/types';\nimport Field from 'app/views/settings/components/forms/field';\nimport Form from 'app/views/settings/components/forms/form';\nimport RangeField from 'app/views/settings/components/forms/rangeField';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\ntype Props = RouteComponentProps<{}, {}> & {\n  organization: Organization;\n};\n\nconst getRateLimitValues = () => {\n  const steps: number[] = [];\n  let i = 0;\n  while (i <= 1000000) {\n    steps.push(i);\n    if (i < 10000) {\n      i += 1000;\n    } else if (i < 100000) {\n      i += 10000;\n    } else {\n      i += 100000;\n    }\n  }\n  return steps;\n};\n\n// We can just generate this once\nconst ACCOUNT_RATE_LIMIT_VALUES = getRateLimitValues();\n\nconst OrganizationRateLimit = ({organization}: Props) => {\n  // TODO(billy): Update organization.quota in organizationStore with new values\n\n  const {quota} = organization;\n  const {maxRate, maxRateInterval, projectLimit, accountLimit} = quota;\n  const initialData = {\n    projectRateLimit: projectLimit || 100,\n    accountRateLimit: accountLimit,\n  };\n\n  return (\n    <div>\n      <SettingsPageHeader title={t('Rate Limits')} />\n\n      <Panel>\n        <PanelHeader>{t('Adjust Limits')}</PanelHeader>\n        <PanelBody>\n          <PanelAlert type=\"info\">\n            {t(`Rate limits allow you to control how much data is stored for this\n                organization. When a rate is exceeded the system will begin discarding\n                data until the next interval.`)}\n          </PanelAlert>\n\n          <Form\n            data-test-id=\"rate-limit-editor\"\n            saveOnBlur\n            allowUndo\n            apiMethod=\"PUT\"\n            apiEndpoint={`/organizations/${organization.slug}/`}\n            initialData={initialData}\n          >\n            {!maxRate ? (\n              <RangeField\n                name=\"accountRateLimit\"\n                label={t('Account Limit')}\n                min={0}\n                max={1000000}\n                allowedValues={ACCOUNT_RATE_LIMIT_VALUES}\n                help={t(\n                  'The maximum number of events to accept across this entire organization.'\n                )}\n                placeholder=\"e.g. 500\"\n                formatLabel={value =>\n                  !value\n                    ? t('No Limit')\n                    : tct('[number] per hour', {\n                        number: value.toLocaleString(),\n                      })\n                }\n              />\n            ) : (\n              <Field\n                label={t('Account Limit')}\n                help={t(\n                  'The maximum number of events to accept across this entire organization.'\n                )}\n              >\n                <TextBlock css={{marginBottom: 0}}>\n                  {tct(\n                    'Your account is limited to a maximum of [maxRate] events per [maxRateInterval] seconds.',\n                    {\n                      maxRate,\n                      maxRateInterval,\n                    }\n                  )}\n                </TextBlock>\n              </Field>\n            )}\n            <RangeField\n              name=\"projectRateLimit\"\n              label={t('Per-Project Limit')}\n              help={t(\n                'The maximum percentage of the account limit (set above) that an individual project can consume.'\n              )}\n              step={5}\n              min={50}\n              max={100}\n              formatLabel={value =>\n                value !== 100 ? (\n                  `${value}%`\n                ) : (\n                  <span\n                    dangerouslySetInnerHTML={{__html: `${t('No Limit')} &mdash; 100%`}}\n                  />\n                )\n              }\n            />\n          </Form>\n        </PanelBody>\n      </Panel>\n    </div>\n  );\n};\n\nexport default OrganizationRateLimit;\n","import * as React from 'react';\n\nimport withOrganization from 'app/utils/withOrganization';\n\nimport OrganizationRateLimits from './organizationRateLimits';\n\nconst OrganizationRateLimitsContainer = (\n  props: React.ComponentProps<typeof OrganizationRateLimits>\n) => (!props.organization ? null : <OrganizationRateLimits {...props} />);\n\nexport default withOrganization(OrganizationRateLimitsContainer);\n"],"names":["defaultFormatMessageValue","value","props","formatLabel","RangeField","formatMessageValue","disabled","otherProps","resolvedDisabled","field","onChange","fieldOnChange","onBlur","fieldProps","val","event","e","ACCOUNT_RATE_LIMIT_VALUES","steps","i","push","getRateLimitValues","OrganizationRateLimit","organization","quota","maxRate","maxRateInterval","projectLimit","accountLimit","initialData","projectRateLimit","accountRateLimit","title","t","type","saveOnBlur","allowUndo","apiMethod","apiEndpoint","slug","label","help","css","tct","name","min","max","allowedValues","placeholder","number","toLocaleString","step","dangerouslySetInnerHTML","__html","withOrganization"],"sourceRoot":""}