{"version":3,"file":"chunks/app_views_settings_organizationTeams_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/teams.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/organizationTeams/allTeamsRow.tsx","webpack:///./app/views/settings/organizationTeams/allTeamsList.tsx","webpack:///./app/views/settings/organizationTeams/organizationAccessRequests.tsx","webpack:///./app/views/settings/organizationTeams/organizationTeams.tsx","webpack:///./app/views/settings/organizationTeams/index.tsx"],"sourcesContent":["import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport {tct} from 'app/locale';\nimport {Team} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {uniqueId} from 'app/utils/guid';\n\ntype CallbackOptions = {\n  success?: Function;\n  error?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\ntype TeamData = {data: Team};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(\n  api: Client,\n  params: OrgAndTeamSlug & TeamData,\n  options: CallbackOptions\n) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent() as React.ReactChild}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {joinTeam, leaveTeam} from 'app/actionCreators/teams';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport IdBadge from 'app/components/idBadge';\nimport Link from 'app/components/links/link';\nimport {PanelItem} from 'app/components/panels';\nimport {t, tct, tn} from 'app/locale';\nimport space from 'app/styles/space';\nimport {Organization, Team} from 'app/types';\nimport withApi from 'app/utils/withApi';\n\ntype Props = {\n  api: Client;\n  urlPrefix: string;\n  organization: Organization;\n  team: Team;\n  openMembership: boolean;\n};\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n};\n\nclass AllTeamsRow extends React.Component<Props, State> {\n  state: State = {\n    loading: false,\n    error: false,\n  };\n\n  handleRequestAccess = async () => {\n    const {team} = this.props;\n\n    try {\n      this.joinTeam({\n        successMessage: tct('You have requested access to [team]', {\n          team: `#${team.slug}`,\n        }),\n\n        errorMessage: tct('Unable to request access to [team]', {\n          team: `#${team.slug}`,\n        }),\n      });\n\n      // Update team so that `isPending` is true\n      TeamActions.updateSuccess(team.slug, {\n        ...team,\n        isPending: true,\n      });\n    } catch (_err) {\n      // No need to do anything\n    }\n  };\n\n  handleJoinTeam = () => {\n    const {team} = this.props;\n\n    this.joinTeam({\n      successMessage: tct('You have joined [team]', {\n        team: `#${team.slug}`,\n      }),\n      errorMessage: tct('Unable to join [team]', {\n        team: `#${team.slug}`,\n      }),\n    });\n  };\n\n  joinTeam = ({\n    successMessage,\n    errorMessage,\n  }: {\n    successMessage: React.ReactNode;\n    errorMessage: React.ReactNode;\n  }) => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    return new Promise<void>((resolve, reject) =>\n      joinTeam(\n        api,\n        {\n          orgId: organization.slug,\n          teamId: team.slug,\n        },\n        {\n          success: () => {\n            this.setState({\n              loading: false,\n              error: false,\n            });\n            addSuccessMessage(successMessage);\n            resolve();\n          },\n          error: () => {\n            this.setState({\n              loading: false,\n              error: true,\n            });\n            addErrorMessage(errorMessage);\n            reject(new Error('Unable to join team'));\n          },\n        }\n      )\n    );\n  };\n\n  handleLeaveTeam = () => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    leaveTeam(\n      api,\n      {\n        orgId: organization.slug,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(\n            tct('You have left [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(\n            tct('Unable to leave [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n        },\n      }\n    );\n  };\n\n  render() {\n    const {team, urlPrefix, openMembership} = this.props;\n    const display = (\n      <IdBadge\n        team={team}\n        avatarSize={36}\n        description={tn('%s Member', '%s Members', team.memberCount)}\n      />\n    );\n\n    // You can only view team details if you have access to team -- this should account\n    // for your role + org open membership\n    const canViewTeam = team.hasAccess;\n\n    return (\n      <TeamPanelItem>\n        <TeamNameWrapper>\n          {canViewTeam ? (\n            <TeamLink to={`${urlPrefix}teams/${team.slug}/`}>{display}</TeamLink>\n          ) : (\n            display\n          )}\n        </TeamNameWrapper>\n        <Spacer>\n          {this.state.loading ? (\n            <Button size=\"small\" disabled>\n              ...\n            </Button>\n          ) : team.isMember ? (\n            <Button size=\"small\" onClick={this.handleLeaveTeam}>\n              {t('Leave Team')}\n            </Button>\n          ) : team.isPending ? (\n            <Button\n              size=\"small\"\n              disabled\n              title={t(\n                'Your request to join this team is being reviewed by organization owners'\n              )}\n            >\n              {t('Request Pending')}\n            </Button>\n          ) : openMembership ? (\n            <Button size=\"small\" onClick={this.handleJoinTeam}>\n              {t('Join Team')}\n            </Button>\n          ) : (\n            <Button size=\"small\" onClick={this.handleRequestAccess}>\n              {t('Request Access')}\n            </Button>\n          )}\n        </Spacer>\n      </TeamPanelItem>\n    );\n  }\n}\n\nconst TeamLink = styled(Link)`\n  display: inline-block;\n\n  &.focus-visible {\n    margin: -${space(1)};\n    padding: ${space(1)};\n    background: #f2eff5;\n    border-radius: 3px;\n    outline: none;\n  }\n`;\n\nexport {AllTeamsRow};\nexport default withApi(AllTeamsRow);\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst Spacer = styled('div')`\n  padding: ${space(2)};\n`;\n\nconst TeamNameWrapper = styled(Spacer)`\n  flex: 1;\n`;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport {tct} from 'app/locale';\nimport {Organization, Team} from 'app/types';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nimport AllTeamsRow from './allTeamsRow';\n\ntype Props = {\n  urlPrefix: string;\n  access: Record<string, any>;\n  organization: Organization;\n  teamList: Array<Team>;\n  openMembership: boolean;\n};\n\nfunction AllTeamsList({\n  organization,\n  urlPrefix,\n  openMembership,\n  teamList,\n  access,\n}: Props) {\n  const teamNodes = teamList.map(team => (\n    <AllTeamsRow\n      urlPrefix={urlPrefix}\n      team={team}\n      organization={organization}\n      openMembership={openMembership}\n      key={team.slug}\n    />\n  ));\n\n  if (!teamNodes.length) {\n    const canCreateTeam = access.has('project:admin');\n\n    return (\n      <EmptyMessage>\n        {tct('No teams here. [teamCreate]', {\n          root: <TextBlock noMargin />,\n          teamCreate: canCreateTeam\n            ? tct('You can always [link:create one].', {\n                link: (\n                  <StyledButton\n                    priority=\"link\"\n                    onClick={() =>\n                      openCreateTeamModal({\n                        organization,\n                      })\n                    }\n                  />\n                ),\n              })\n            : null,\n        })}\n      </EmptyMessage>\n    );\n  }\n\n  return <Fragment>{teamNodes}</Fragment>;\n}\n\nexport default AllTeamsList;\n\nconst StyledButton = styled(Button)`\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {Client} from 'app/api';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport space from 'app/styles/space';\nimport {AccessRequest} from 'app/types';\nimport withApi from 'app/utils/withApi';\n\ntype Props = {\n  api: Client;\n  orgId: string;\n  onRemoveAccessRequest: (id: string, isApproved: boolean) => void;\n  requestList: AccessRequest[];\n};\n\ntype State = {\n  accessRequestBusy: Record<string, boolean>;\n};\n\ntype HandleOpts = {\n  id: string;\n  isApproved: boolean;\n  successMessage: string;\n  errorMessage: string;\n};\n\nclass OrganizationAccessRequests extends React.Component<Props, State> {\n  state: State = {\n    accessRequestBusy: {},\n  };\n\n  async handleAction({id, isApproved, successMessage, errorMessage}: HandleOpts) {\n    const {api, orgId, onRemoveAccessRequest} = this.props;\n\n    this.setState(state => ({\n      accessRequestBusy: {...state.accessRequestBusy, [id]: true},\n    }));\n\n    try {\n      await api.requestPromise(`/organizations/${orgId}/access-requests/${id}/`, {\n        method: 'PUT',\n        data: {isApproved},\n      });\n      onRemoveAccessRequest(id, isApproved);\n      addSuccessMessage(successMessage);\n    } catch {\n      addErrorMessage(errorMessage);\n    }\n\n    this.setState(state => ({\n      accessRequestBusy: {...state.accessRequestBusy, [id]: false},\n    }));\n  }\n\n  handleApprove = (id: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    this.handleAction({\n      id,\n      isApproved: true,\n      successMessage: t('Team request approved'),\n      errorMessage: t('Error approving team request'),\n    });\n  };\n\n  handleDeny = (id: string, e: React.MouseEvent) => {\n    e.stopPropagation();\n    this.handleAction({\n      id,\n      isApproved: false,\n      successMessage: t('Team request denied'),\n      errorMessage: t('Error denying team request'),\n    });\n  };\n\n  render() {\n    const {requestList} = this.props;\n    const {accessRequestBusy} = this.state;\n\n    if (!requestList || !requestList.length) {\n      return null;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Pending Team Requests')}</PanelHeader>\n\n        <PanelBody>\n          {requestList.map(({id, member, team, requester}) => {\n            const memberName =\n              member.user &&\n              (member.user.name || member.user.email || member.user.username);\n            const requesterName =\n              requester && (requester.name || requester.email || requester.username);\n            return (\n              <StyledPanelItem key={id}>\n                <div data-test-id=\"request-message\">\n                  {requesterName\n                    ? tct('[requesterName] requests to add [name] to the [team] team.', {\n                        requesterName,\n                        name: <strong>{memberName}</strong>,\n                        team: <strong>#{team.slug}</strong>,\n                      })\n                    : tct('[name] requests access to the [team] team.', {\n                        name: <strong>{memberName}</strong>,\n                        team: <strong>#{team.slug}</strong>,\n                      })}\n                </div>\n                <div>\n                  <StyledButton\n                    priority=\"primary\"\n                    size=\"small\"\n                    onClick={e => this.handleApprove(id, e)}\n                    busy={accessRequestBusy[id]}\n                  >\n                    {t('Approve')}\n                  </StyledButton>\n                  <Button\n                    busy={accessRequestBusy[id]}\n                    onClick={e => this.handleDeny(id, e)}\n                    size=\"small\"\n                  >\n                    {t('Deny')}\n                  </Button>\n                </div>\n              </StyledPanelItem>\n            );\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  display: grid;\n  grid-template-columns: auto max-content;\n  grid-gap: ${space(2)};\n  align-items: center;\n`;\n\nconst StyledButton = styled(Button)`\n  margin-right: ${space(1)};\n`;\n\nexport default withApi(OrganizationAccessRequests);\n","import {RouteComponentProps} from 'react-router';\n\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {IconAdd} from 'app/icons';\nimport {t} from 'app/locale';\nimport {AccessRequest, Organization, Team} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\n\nimport AllTeamsList from './allTeamsList';\nimport OrganizationAccessRequests from './organizationAccessRequests';\n\ntype Props = {\n  access: Set<string>;\n  features: Set<string>;\n  allTeams: Team[];\n  activeTeams: Team[];\n  organization: Organization;\n  requestList: AccessRequest[];\n  onRemoveAccessRequest: (id: string, isApproved: boolean) => void;\n} & RouteComponentProps<{orgId: string}, {}>;\n\nfunction OrganizationTeams({\n  allTeams,\n  activeTeams,\n  organization,\n  access,\n  features,\n  routes,\n  params,\n  requestList,\n  onRemoveAccessRequest,\n}: Props) {\n  if (!organization) {\n    return null;\n  }\n  const canCreateTeams = access.has('project:admin');\n\n  const action = (\n    <Button\n      priority=\"primary\"\n      size=\"small\"\n      disabled={!canCreateTeams}\n      title={\n        !canCreateTeams ? t('You do not have permission to create teams') : undefined\n      }\n      onClick={() =>\n        openCreateTeamModal({\n          organization,\n        })\n      }\n      icon={<IconAdd size=\"xs\" isCircled />}\n    >\n      {t('Create Team')}\n    </Button>\n  );\n\n  const teamRoute = routes.find(({path}) => path === 'teams/');\n  const urlPrefix = teamRoute\n    ? recreateRoute(teamRoute, {routes, params, stepBack: -2})\n    : '';\n\n  const activeTeamIds = new Set(activeTeams.map(team => team.id));\n  const otherTeams = allTeams.filter(team => !activeTeamIds.has(team.id));\n  const title = t('Teams');\n\n  return (\n    <div data-test-id=\"team-list\">\n      <SentryDocumentTitle title={title} orgSlug={organization.slug} />\n      <SettingsPageHeader title={title} action={action} />\n\n      <OrganizationAccessRequests\n        orgId={params.orgId}\n        requestList={requestList}\n        onRemoveAccessRequest={onRemoveAccessRequest}\n      />\n      <Panel>\n        <PanelHeader>{t('Your Teams')}</PanelHeader>\n        <PanelBody>\n          <AllTeamsList\n            urlPrefix={urlPrefix}\n            organization={organization}\n            teamList={activeTeams}\n            access={access}\n            openMembership={false}\n          />\n        </PanelBody>\n      </Panel>\n      <Panel>\n        <PanelHeader>{t('Other Teams')}</PanelHeader>\n        <PanelBody>\n          <AllTeamsList\n            urlPrefix={urlPrefix}\n            organization={organization}\n            teamList={otherTeams}\n            access={access}\n            openMembership={\n              !!(features.has('open-membership') || access.has('org:write'))\n            }\n          />\n        </PanelBody>\n      </Panel>\n    </div>\n  );\n}\n\nexport default OrganizationTeams;\n","import {RouteComponentProps} from 'react-router';\n\nimport {loadStats} from 'app/actionCreators/projects';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport {AccessRequest, Organization, Team} from 'app/types';\nimport {sortArray} from 'app/utils';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport withTeams from 'app/utils/withTeams';\nimport AsyncView from 'app/views/asyncView';\n\nimport OrganizationTeams from './organizationTeams';\n\ntype Props = {\n  api: Client;\n  organization: Organization;\n  teams: Team[];\n} & RouteComponentProps<{orgId: string}, {}>;\n\ntype State = AsyncView['state'] & {\n  requestList: AccessRequest[];\n};\n\nclass OrganizationTeamsContainer extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {orgId} = this.props.params;\n\n    return [['requestList', `/organizations/${orgId}/access-requests/`]];\n  }\n\n  componentDidMount() {\n    this.fetchStats();\n  }\n\n  fetchStats() {\n    loadStats(this.props.api, {\n      orgId: this.props.params.orgId,\n      query: {\n        since: (new Date().getTime() / 1000 - 3600 * 24).toString(),\n        stat: 'generated',\n        group: 'project',\n      },\n    });\n  }\n\n  removeAccessRequest = (id: string, isApproved: boolean) => {\n    const requestToRemove = this.state.requestList.find(request => request.id === id);\n    this.setState(state => ({\n      requestList: state.requestList.filter(request => request.id !== id),\n    }));\n    if (isApproved && requestToRemove) {\n      const team = requestToRemove.team;\n      TeamActions.updateSuccess(team.slug, {\n        ...team,\n        memberCount: team.memberCount + 1,\n      });\n    }\n  };\n\n  renderBody() {\n    const {organization, teams} = this.props;\n\n    if (!organization) {\n      return null;\n    }\n    const allTeams = sortArray(teams, team => team.name);\n    const activeTeams = allTeams.filter(team => team.isMember);\n\n    return (\n      <OrganizationTeams\n        {...this.props}\n        access={new Set(organization.access)}\n        features={new Set(organization.features)}\n        organization={organization}\n        allTeams={allTeams}\n        activeTeams={activeTeams}\n        requestList={this.state.requestList}\n        onRemoveAccessRequest={this.removeAccessRequest}\n      />\n    );\n  }\n}\n\nexport {OrganizationTeamsContainer};\n\nexport default withApi(withOrganization(withTeams(OrganizationTeamsContainer)));\n"],"names":["doCallback","params","name","args","callIfFunction","fetchTeamDetails","api","options","TeamActions","teamId","request","orgId","success","data","error","updateTeamSuccess","updateTeam","endpoint","method","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","addSuccessMessage","tct","slug","organization","err","addErrorMessage","removeTeam","SentryDocumentTitle","title","orgSlug","projectSlug","children","docTitle","recreateRoute","to","routes","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","AsyncView","AsyncComponent","getTitle","render","this","renderComponent","AllTeamsRow","React","loading","async","props","successMessage","errorMessage","isPending","_err","setState","Promise","resolve","reject","Error","urlPrefix","openMembership","display","avatarSize","description","tn","memberCount","canViewTeam","hasAccess","TeamPanelItem","TeamNameWrapper","TeamLink","Spacer","state","size","disabled","isMember","onClick","handleLeaveTeam","t","handleJoinTeam","handleRequestAccess","Link","space","withApi","PanelItem","AllTeamsList","teamList","access","teamNodes","length","canCreateTeam","has","root","noMargin","teamCreate","link","StyledButton","priority","openCreateTeamModal","Fragment","Button","p","theme","fontSizeLarge","OrganizationAccessRequests","accessRequestBusy","e","stopPropagation","handleAction","isApproved","onRemoveAccessRequest","requestList","member","requester","memberName","user","email","username","requesterName","StyledPanelItem","handleApprove","busy","handleDeny","OrganizationTeams","allTeams","activeTeams","features","canCreateTeams","action","undefined","icon","isCircled","teamRoute","find","activeTeamIds","Set","otherTeams","filter","OrganizationTeamsContainer","requestToRemove","getEndpoints","componentDidMount","fetchStats","loadStats","query","since","Date","getTime","toString","stat","group","renderBody","teams","sortArray","removeAccessRequest","withOrganization","withTeams"],"sourceRoot":""}