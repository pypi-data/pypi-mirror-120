{"version":3,"file":"chunks/app_views_settings_organizationTeams_teamDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/actionCreators/teams.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/views/settings/organizationTeams/teamDetails.tsx"],"sourcesContent":["import {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport TeamActions from 'app/actions/teamActions';\nimport {Client} from 'app/api';\nimport {tct} from 'app/locale';\nimport {Team} from 'app/types';\nimport {callIfFunction} from 'app/utils/callIfFunction';\nimport {uniqueId} from 'app/utils/guid';\n\ntype CallbackOptions = {\n  success?: Function;\n  error?: Function;\n};\n\nconst doCallback = (\n  params: CallbackOptions = {},\n  name: keyof CallbackOptions,\n  ...args: any[]\n) => {\n  callIfFunction(params[name], ...args);\n};\n\n/**\n * Note these are both slugs\n */\ntype OrgSlug = {orgId: string};\ntype OrgAndTeamSlug = OrgSlug & {teamId: string};\n\ntype TeamData = {data: Team};\n\n/**\n * This is the actual internal id, not username or email\n */\ntype MemberId = {memberId: string};\n\n// Fetch teams for org\nexport function fetchTeams(api: Client, params: OrgSlug, options: CallbackOptions) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(\n  api: Client,\n  params: OrgAndTeamSlug,\n  options?: CallbackOptions\n) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId: OrgAndTeamSlug['teamId'], data: Team) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(\n  api: Client,\n  params: OrgAndTeamSlug & TeamData,\n  options: CallbackOptions\n) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId ?? 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(\n  api: Client,\n  params: OrgAndTeamSlug & Partial<MemberId>,\n  options: CallbackOptions\n) {\n  const endpoint = `/organizations/${params.orgId}/members/${\n    params.memberId || 'me'\n  }/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api: Client, team: Pick<Team, 'slug'>, params: OrgSlug) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api: Client, params: OrgAndTeamSlug) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import * as React from 'react';\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  index: boolean;\n  activeClassName: string;\n  disabled: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    query?: string;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n  };\n\nclass ListLink extends React.Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import * as React from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype Props = {\n  // Main page title\n  title: string;\n  orgSlug?: string;\n  projectSlug?: string;\n  children?: React.ReactNode;\n};\n\nfunction SentryDocumentTitle({title, orgSlug, projectSlug, children}: Props) {\n  function getDocTitle() {\n    if (!orgSlug && !projectSlug) {\n      return title;\n    }\n\n    if (orgSlug && projectSlug) {\n      return `${title} - ${orgSlug} - ${projectSlug}`;\n    }\n\n    if (orgSlug) {\n      return `${title} - ${orgSlug}`;\n    }\n\n    return `${title} - ${projectSlug}`;\n  }\n\n  const docTitle = getDocTitle();\n\n  return (\n    <DocumentTitle title={`${docTitle} - Sentry`}>\n      {children as React.ReactChild}\n    </DocumentTitle>\n  );\n}\n\nexport default SentryDocumentTitle;\n","import {Location} from 'history';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\nimport {RouteWithName} from 'app/views/settings/components/settingsBreadcrumb/types';\n\ntype Options = {\n  routes: RouteWithName[];\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string | undefined};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n  location?: Location;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(\n  to: string | RouteWithName,\n  options: Options\n): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const search = location?.search ?? '';\n  const hash = location?.hash ?? '';\n\n  const fullRoute = `${baseRoute.join('')}${\n    typeof to !== 'string' ? '' : to\n  }${search}${hash}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import * as React from 'react';\nimport {browserHistory, RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport isEqual from 'lodash/isEqual';\n\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {fetchTeamDetails, joinTeam} from 'app/actionCreators/teams';\nimport {Client} from 'app/api';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport IdBadge from 'app/components/idBadge';\nimport ListLink from 'app/components/links/listLink';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport NavTabs from 'app/components/navTabs';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t, tct} from 'app/locale';\nimport TeamStore from 'app/stores/teamStore';\nimport {Organization, Team} from 'app/types';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport withTeams from 'app/utils/withTeams';\n\ntype Props = {\n  api: Client;\n  teams: Team[];\n  children: React.ReactNode;\n  organization: Organization;\n} & RouteComponentProps<{orgId: string; teamId: string}, {}>;\n\ntype State = {\n  loading: boolean;\n  error: boolean;\n  requesting: boolean;\n  team: Team | null;\n};\n\nclass TeamDetails extends React.Component<Props, State> {\n  state = this.getInitialState();\n\n  getInitialState(): State {\n    const team = TeamStore.getBySlug(this.props.params.teamId);\n\n    return {\n      loading: !TeamStore.initialized,\n      error: false,\n      requesting: false,\n      team,\n    };\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {params} = this.props;\n\n    if (\n      prevProps.params.teamId !== params.teamId ||\n      prevProps.params.orgId !== params.orgId\n    ) {\n      this.fetchData();\n    }\n    if (!isEqual(this.props.teams, prevProps.teams)) {\n      this.setActiveTeam();\n    }\n  }\n\n  setActiveTeam() {\n    const team = TeamStore.getBySlug(this.props.params.teamId);\n    const loading = !TeamStore.initialized;\n    const error = !loading && !team;\n\n    this.setState({team, loading, error});\n  }\n\n  handleRequestAccess = () => {\n    const {api, params} = this.props;\n    const {team} = this.state;\n    if (!team) {\n      return;\n    }\n\n    this.setState({\n      requesting: true,\n    });\n\n    joinTeam(\n      api,\n      {\n        orgId: params.orgId,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          addSuccessMessage(\n            tct('You have requested access to [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n          this.setState({\n            requesting: false,\n          });\n        },\n        error: () => {\n          addErrorMessage(\n            tct('Unable to request access to [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n          this.setState({\n            requesting: false,\n          });\n        },\n      }\n    );\n  };\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n    fetchTeamDetails(this.props.api, this.props.params);\n  };\n\n  onTeamChange = (data: Team) => {\n    const team = this.state.team;\n    if (data.slug !== team?.slug) {\n      const orgId = this.props.params.orgId;\n      browserHistory.replace(`/organizations/${orgId}/teams/${data.slug}/settings/`);\n    } else {\n      this.setState({\n        team: {\n          ...team,\n          ...data,\n        },\n      });\n    }\n  };\n\n  render() {\n    const {children, params, routes} = this.props;\n    const {team, loading, requesting, error} = this.state;\n\n    if (loading) {\n      return <LoadingIndicator />;\n    }\n    if (!team || !team.hasAccess) {\n      return (\n        <Alert type=\"warning\">\n          {team ? (\n            <RequestAccessWrapper>\n              {tct('You do not have access to the [teamSlug] team.', {\n                teamSlug: <strong>{`#${team.slug}`}</strong>,\n              })}\n              <Button\n                disabled={requesting || team.isPending}\n                size=\"small\"\n                onClick={this.handleRequestAccess}\n              >\n                {team.isPending ? t('Request Pending') : t('Request Access')}\n              </Button>\n            </RequestAccessWrapper>\n          ) : (\n            <div>{t('You do not have access to this team.')}</div>\n          )}\n        </Alert>\n      );\n    }\n    if (error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    }\n\n    // `/organizations/${orgId}/teams/${teamId}`;\n    const routePrefix = recreateRoute('', {routes, params, stepBack: -1});\n\n    const navigationTabs = [\n      <ListLink key={0} to={`${routePrefix}members/`}>\n        {t('Members')}\n      </ListLink>,\n      <ListLink key={1} to={`${routePrefix}projects/`}>\n        {t('Projects')}\n      </ListLink>,\n      <ListLink key={2} to={`${routePrefix}notifications/`}>\n        {t('Notifications')}\n      </ListLink>,\n      <ListLink key={3} to={`${routePrefix}settings/`}>\n        {t('Settings')}\n      </ListLink>,\n    ];\n\n    return (\n      <div>\n        <SentryDocumentTitle title={t('Team Details')} orgSlug={params.orgId} />\n        <h3>\n          <IdBadge hideAvatar team={team} avatarSize={36} />\n        </h3>\n\n        <NavTabs underlined>{navigationTabs}</NavTabs>\n\n        {React.isValidElement(children) &&\n          React.cloneElement(children, {\n            team,\n            onTeamChange: this.onTeamChange,\n          })}\n      </div>\n    );\n  }\n}\n\nexport default withApi(withOrganization(withTeams(TeamDetails)));\n\nconst RequestAccessWrapper = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n"],"names":["doCallback","params","name","args","callIfFunction","fetchTeamDetails","api","options","TeamActions","teamId","request","orgId","success","data","error","updateTeamSuccess","updateTeam","endpoint","method","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","addSuccessMessage","tct","slug","organization","err","addErrorMessage","removeTeam","ListLink","React","_classNames","className","activeClassName","this","props","isActive","classNames","to","query","index","router","queryData","qs","undefined","target","pathname","render","children","disabled","carriedProps","omit","StyledLi","getClassName","onlyActiveOnIndex","withRouter","shouldForwardProp","prop","p","theme","SentryDocumentTitle","title","orgSlug","projectSlug","docTitle","recreateRoute","routes","location","stepBack","paths","map","path","lastRootIndex","routeIndex","indexOf","findLastIndex","slice","baseRoute","search","hash","fullRoute","join","replaceRouterParams","TeamDetails","getInitialState","state","setState","requesting","loading","browserHistory","TeamStore","componentDidUpdate","prevProps","fetchData","isEqual","teams","setActiveTeam","hasAccess","type","RequestAccessWrapper","teamSlug","isPending","size","onClick","handleRequestAccess","t","onRetry","routePrefix","navigationTabs","hideAvatar","avatarSize","underlined","onTeamChange","withApi","withOrganization","withTeams"],"sourceRoot":""}