Metadata-Version: 2.1
Name: triarray
Version: 0.2.1
Summary: Tools for working with symmetric matrices in non-redundant format
Home-page: https://github.com/jlumpe/triarray
Author: Jared Lumpe
Author-email: mjlumpe@gmail.com
License: MIT
Project-URL: Documentation, http://triarray.readthedocs.io/en/latest/
Keywords: numpy array matrix symmetric pairwise distance similarity
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Mathematics
Requires-Python: >=3.5
Description-Content-Type: text/markdown
License-File: LICENSE

# triarray

[![CI](https://github.com/jlumpe/triarray/actions/workflows/ci.yml/badge.svg)](https://github.com/jlumpe/triarray/actions/workflows/ci.yml)
[![Documentation Status](https://readthedocs.org/projects/triarray/badge/?version=latest)](https://triarray.readthedocs.io/en/latest/?badge=latest)


Python package for working with symmetric matrices in non-redundant format.

See full documentation [here](http://triarray.readthedocs.io/en/latest/).


## Overview

The `triarray` package contains tools for working with large symmetric matrices while only storing the elements in the upper or lower triangle, thus halving memory requirements.

`triarray` uses [Numba](http://numba.pydata.org/)'s just-in-time compilation to generate high-performance C code that works with any data type and is easily extendable (including within a Jupyter notebook).


## Installation

The easiest way is to use pip:

    pip install triarray
    
or you can clone the repository and run the setup script:

    cd path/to/triarray
    pip install .


## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.


