name: wilddog-ci

on:
  - push

env:
  REGISTRY: docker.nimworks.com
  BRANCH_NAME: ${{ github.ref }}

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - 3.9
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: test
          POSTGRES_DB: wild_dog
          POSTGRES_PASSWORD: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 30s --health-retries 15
    steps:
      - uses: actions/checkout@v2
        name: checkout
      - name: setup
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: install
        run: |
          pip install tox
      - name: static checks
        run: tox -e lint
        if: matrix.python == 3.9
      - name: tests
        run: tox -e py
        env:
          PG_USER: test
          PG_NAME: wild_dog
          PG_PASS: test
          PG_HOST: localhost:${{ job.services.postgres.ports[5432] }}
  deploy:
    needs: tests
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: registry init
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: build and push
        run: |
          export BRANCH_NAME=${BRANCH_NAME##*/}
          bash docker.sh --push
  release:
    needs: [ tests, deploy ]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: install dependencies
        run: python -m pip install tox
      - name: release
        run: tox -e release
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
