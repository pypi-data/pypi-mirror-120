(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([[5424],{92306:(t,e,n)=>{"use strict";n.d(e,{v:()=>r});const r=(t,e)=>{const n={};for(const r of t){const t=e(r);t in n?n[t].push(r):n[t]=[r]}return n}},11950:(t,e,n)=>{"use strict";n.d(e,{l:()=>r});const r=async(t,e)=>new Promise((n=>{const r=e(t,(t=>{r(),n(t)}))}))},81582:(t,e,n)=>{"use strict";n.d(e,{LZ:()=>r,pB:()=>s,SO:()=>i,iJ:()=>o,Nn:()=>a,Ny:()=>u,T0:()=>l});const r=2143==n.j?["migration_error","setup_error","setup_retry"]:null,s=t=>t.callApi("GET","config/config_entries/entry"),i=(t,e,n)=>t.callWS({type:"config_entries/update",entry_id:e,...n}),o=(t,e)=>t.callApi("DELETE",`config/config_entries/entry/${e}`),a=(t,e)=>t.callApi("POST",`config/config_entries/entry/${e}/reload`),u=(t,e)=>t.callWS({type:"config_entries/disable",entry_id:e,disabled_by:"user"}),l=(t,e)=>t.callWS({type:"config_entries/disable",entry_id:e,disabled_by:null})},55424:(t,e,n)=>{"use strict";n.d(e,{Bm:()=>d,o1:()=>p,iK:()=>m,rl:()=>h,P:()=>b,KU:()=>S,xZ:()=>w,gy:()=>v,ZC:()=>T,_Z:()=>D,Jj:()=>Z,UB:()=>O,jB:()=>W});var r=n(59699),s=n(27088),i=n(83008),o=n(70390),a=n(61334),u=n(95282),l=n(92306),_=n(11950),c=n(81582),y=n(74186),f=n(58763);const g=[],d=()=>({stat_energy_from:"",stat_cost:null,entity_energy_from:null,entity_energy_price:null,number_energy_price:null}),p=()=>({stat_energy_to:"",stat_compensation:null,entity_energy_to:null,entity_energy_price:null,number_energy_price:null}),m=()=>({type:"grid",flow_from:[],flow_to:[],cost_adjustment_day:0}),h=()=>({type:"solar",stat_energy_from:"",config_entry_solar_forecast:null}),b=()=>({type:"battery",stat_energy_from:"",stat_energy_to:""}),S=()=>({type:"gas",stat_energy_from:"",stat_cost:null,entity_energy_from:null,entity_energy_price:null,number_energy_price:null}),w=t=>t.callWS({type:"energy/info"}),v=t=>t.callWS({type:"energy/validate"}),T=t=>t.callWS({type:"energy/get_prefs"}),D=async(t,e)=>{const n=t.callWS({type:"energy/save_prefs",...e});return E(t),n},Z=t=>(0,l.v)(t.energy_sources,(t=>t.type)),E=t=>{g.forEach((e=>{const n=O(t,{key:e});n.clearPrefs(),n._active&&n.refresh()}))},O=(t,e={})=>{let n="_energy";if(e.key){if(!e.key.startsWith("energy_"))throw new Error("Key need to start with energy_");n=`_${e.key}`}if(t.connection[n])return t.connection[n];g.push(e.key);const l=(0,u._)(t.connection,n,(async()=>{if(l.prefs||(l.prefs=await T(t)),l._refreshTimeout&&clearTimeout(l._refreshTimeout),l._active&&(!l.end||l.end>new Date)){const t=new Date;t.getMinutes()>=20&&t.setHours(t.getHours()+1),t.setMinutes(20,0,0),l._refreshTimeout=window.setTimeout((()=>l.refresh()),t.getTime()-Date.now())}return(async(t,e,n,s)=>{const[i,o,a]=await Promise.all([(0,c.pB)(t),(0,_.l)(t.connection,y.LM),w(t)]),u=i.find((t=>"co2signal"===t.domain));let l;if(u)for(const e of o){if(e.config_entry_id!==u.entry_id)continue;const n=t.states[e.entity_id];if(n&&"%"===n.attributes.unit_of_measurement){l=n.entity_id;break}}const g=[];void 0!==l&&g.push(l);for(const t of e.energy_sources)if("solar"!==t.type)if("gas"!==t.type)if("battery"!==t.type){for(const e of t.flow_from){g.push(e.stat_energy_from),e.stat_cost&&g.push(e.stat_cost);const t=a.cost_sensors[e.stat_energy_from];t&&g.push(t)}for(const e of t.flow_to){g.push(e.stat_energy_to),e.stat_compensation&&g.push(e.stat_compensation);const t=a.cost_sensors[e.stat_energy_to];t&&g.push(t)}}else g.push(t.stat_energy_from),g.push(t.stat_energy_to);else{g.push(t.stat_energy_from),t.stat_cost&&g.push(t.stat_cost);const e=a.cost_sensors[t.stat_energy_from];e&&g.push(e)}else g.push(t.stat_energy_from);return{start:n,end:s,info:a,prefs:e,stats:await(0,f.dL)(t,(0,r.Z)(n,-1),s,g),co2SignalConfigEntry:u,co2SignalEntity:l}})(t,l.prefs,l.start,l.end)})),d=l.subscribe;l.subscribe=t=>{const e=d(t);return l._active++,()=>{l._active--,l._active<1&&(clearTimeout(l._refreshTimeout),l._refreshTimeout=void 0),e()}},l._active=0,l.prefs=e.prefs;const p=new Date;l.start=p.getHours()>0?(0,s.Z)():(0,i.Z)(),l.end=p.getHours()>0?(0,o.Z)():(0,a.Z)();const m=()=>{l._updatePeriodTimeout=window.setTimeout((()=>{l.start=(0,s.Z)(),l.end=(0,o.Z)(),m()}),(0,r.Z)((0,o.Z)(),1).getTime()-Date.now())};return m(),l.clearPrefs=()=>{l.prefs=void 0},l.setPeriod=(t,e)=>{var n;l.start=t,l.end=e,l.start.getTime()!==(0,s.Z)().getTime()||(null===(n=l.end)||void 0===n?void 0:n.getTime())!==(0,o.Z)().getTime()||l._updatePeriodTimeout?l._updatePeriodTimeout&&(clearTimeout(l._updatePeriodTimeout),l._updatePeriodTimeout=void 0):m()},l},W=t=>t.callWS({type:"energy/solar_forecast"})},74186:(t,e,n)=>{"use strict";n.d(e,{eD:()=>o,Mw:()=>a,vA:()=>u,L3:()=>l,Nv:()=>_,z3:()=>c,LM:()=>g});var r=n(95282);if(2143==n.j)var s=n(91741);var i=n(38346);const o=(t,e)=>e.find((e=>t.states[e.entity_id]&&"battery"===t.states[e.entity_id].attributes.device_class)),a=(t,e)=>e.find((e=>t.states[e.entity_id]&&"battery_charging"===t.states[e.entity_id].attributes.device_class)),u=(t,e)=>{if(e.name)return e.name;const n=t.states[e.entity_id];return n?(0,s.C)(n):null},l=(t,e)=>t.callWS({type:"config/entity_registry/get",entity_id:e}),_=(t,e,n)=>t.callWS({type:"config/entity_registry/update",entity_id:e,...n}),c=(t,e)=>t.callWS({type:"config/entity_registry/remove",entity_id:e}),y=t=>t.sendMessagePromise({type:"config/entity_registry/list"}),f=(t,e)=>t.subscribeEvents((0,i.D)((()=>y(t).then((t=>e.setState(t,!0)))),500,!0),"entity_registry_updated"),g=(t,e)=>(0,r.B)("_entityRegistry",y,f,t,e)},58763:(t,e,n)=>{"use strict";n.d(e,{vq:()=>y,_J:()=>f,Nu:()=>d,uR:()=>p,dL:()=>m,Kj:()=>h,q6:()=>b,Nw:()=>S,m2:()=>w,VU:()=>v,Kk:()=>T});var r=n(13250),s=n(79021),i=n(59429),o=n(32182),a=n(29171),u=n(22311),l=n(91741);const _=["climate","humidifier","water_heater"],c=["temperature","current_temperature","target_temp_low","target_temp_high","hvac_action","humidity","mode"],y=(t,e,n,r,s=!1,i,o=!0)=>{let a="history/period";return n&&(a+="/"+n.toISOString()),a+="?filter_entity_id="+e,r&&(a+="&end_time="+r.toISOString()),s&&(a+="&skip_initial_state"),void 0!==i&&(a+=`&significant_changes_only=${Number(i)}`),o&&(a+="&minimal_response"),t.callApi("GET",a)},f=(t,e,n,r)=>t.callApi("GET",`history/period/${e.toISOString()}?end_time=${n.toISOString()}&minimal_response${r?`&filter_entity_id=${r}`:""}`),g=(t,e)=>t.state===e.state&&(!t.attributes||!e.attributes||c.every((n=>t.attributes[n]===e.attributes[n]))),d=(t,e,n)=>{const r={},s=[];if(!e)return{line:[],timeline:[]};e.forEach((e=>{if(0===e.length)return;const i=e.find((t=>t.attributes&&("unit_of_measurement"in t.attributes||"state_class"in t.attributes)));let o;o=i?i.attributes.unit_of_measurement||" ":{climate:t.config.unit_system.temperature,counter:"#",humidifier:"%",input_number:"#",number:"#",water_heater:t.config.unit_system.temperature}[(0,u.N)(e[0])],o?o in r?r[o].push(e):r[o]=[e]:s.push(((t,e,n)=>{const r=[],s=n.length-1;for(const i of n)r.length>0&&i.state===r[r.length-1].state||(i.entity_id||(i.attributes=n[s].attributes,i.entity_id=n[s].entity_id),r.push({state_localize:(0,a.D)(t,i,e),state:i.state,last_changed:i.last_changed}));return{name:(0,l.C)(n[0]),entity_id:n[0].entity_id,data:r}})(n,t.locale,e))}));return{line:Object.keys(r).map((t=>((t,e)=>{const n=[];for(const t of e){const e=t[t.length-1],r=(0,u.N)(e),s=[];for(const e of t){let t;if(_.includes(r)){t={state:e.state,last_changed:e.last_updated,attributes:{}};for(const n of c)n in e.attributes&&(t.attributes[n]=e.attributes[n])}else t=e;s.length>1&&g(t,s[s.length-1])&&g(t,s[s.length-2])||s.push(t)}n.push({domain:r,name:(0,l.C)(e),entity_id:e.entity_id,states:s})}return{unit:t,identifier:e.map((t=>t[0].entity_id)).join(""),data:n}})(t,r[t]))),timeline:s}},p=(t,e)=>t.callWS({type:"history/list_statistic_ids",statistic_type:e}),m=(t,e,n,r,s="hour")=>t.callWS({type:"history/statistics_during_period",start_time:e.toISOString(),end_time:null==n?void 0:n.toISOString(),statistic_ids:r,period:s}),h=t=>{if(!t||t.length<2)return null;const e=t[t.length-1].sum;if(null===e)return null;const n=t[0].sum;return null===n?e:e-n},b=(t,e)=>{let n=null;for(const r of e){if(!(r in t))continue;const e=h(t[r]);null!==e&&(null===n?n=e:n+=e)}return n},S=(t,e)=>t.some((t=>null!==t[e])),w=(t,e)=>{let n=null;if(0===e.length||0===t.length)return null;const r=(t=>{const e={};return t.forEach((t=>{if(0===t.length)return;let n=null;t.forEach((t=>{if(null===t.sum)return;if(null===n)return void(n=t.sum);const r=t.sum-n;t.start in e?e[t.start]+=r:e[t.start]=r,n=t.sum}))})),e})(e);return t.forEach((t=>{const e=r[t.start];void 0!==e&&(null===n?n=e*(t.mean/100):n+=e*(t.mean/100))})),n},v=t=>{if(null==t||!t.length)return[];const e=[];let n,o;t.length>1&&new Date(t[0].start).getDate()===new Date(t[1].start).getDate()&&e.push({...t[0],start:(0,r.Z)((0,s.Z)(new Date(t[0].start),-1)).toISOString()});for(const r of t){const t=new Date(r.start).getDate();void 0===o&&(o=t),o!==t&&(e.push({...n,start:(0,i.Z)(new Date(n.start)).toISOString()}),o=t),n=r}return e.push({...n,start:(0,i.Z)(new Date(n.start)).toISOString()}),e},T=t=>{if(null==t||!t.length)return[];const e=[];let n,s;t.length>1&&new Date(t[0].start).getMonth()===new Date(t[1].start).getMonth()&&e.push({...t[0],start:(0,r.Z)((0,o.Z)(new Date(t[0].start),-1)).toISOString()});for(const i of t){const t=new Date(i.start).getMonth();void 0===s&&(s=t),s!==t&&(e.push({...n,start:(0,r.Z)(new Date(n.start)).toISOString()}),s=t),n=i}return e.push({...n,start:(0,r.Z)(new Date(n.start)).toISOString()}),e}}}]);
//# sourceMappingURL=8e4de7db.js.map