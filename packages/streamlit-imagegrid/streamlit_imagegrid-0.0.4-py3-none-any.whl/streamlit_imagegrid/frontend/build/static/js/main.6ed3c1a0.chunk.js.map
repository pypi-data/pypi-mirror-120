{"version":3,"sources":["ImageGrid.tsx","index.tsx"],"names":["ImageGrid","render","urls","props","args","zoom","height","output_urls","length","IsValidJSONString","map","x","style","overflowY","width","maxRows","enableImageSelection","onClickThumbnail","e","Streamlit","setComponentValue","rowHeight","images","str","hasOwnProperty","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","document","getElementById"],"mappings":"oOAOMA,E,4MAUKC,OAAS,WAChB,IAGMC,EAAO,EAAKC,MAAMC,KAAX,KACPC,EAAO,EAAKF,MAAMC,KAAX,KACPE,EAAS,EAAKH,MAAMC,KAAX,OAEXG,EAAc,GAClB,OAAIL,EAAKM,OAAQ,GAGfD,EADE,EAAKE,kBAAkBP,EAAK,IACjBA,EAAKQ,KAAI,SAAAC,GAAO,MAAQ,CAAC,QAAU,OAAO,IAAMA,EAAC,IAAQ,UAAYA,EAAC,IAAQ,eAAiBA,EAAC,MAAU,gBAAkBA,EAAC,WAE5HT,EAAKQ,KAAI,SAAAC,GAAM,MAAO,CAAC,IAAOA,EAAE,UAAYA,MAOpD,qBAAKC,MAAO,CAACN,OAAQA,EAAQO,UAAU,QAAvC,SAEN,cAAC,IAAD,CAASD,MAAO,CAACE,MAAM,QAASC,QAAS,IAAKC,sBAAsB,EAAMC,iBAtBzD,SAACC,GACdC,IAAUC,kBAAkBlB,EAAKgB,KAqBmEG,UAAWhB,EAAMiB,OAAQf,OAJ1H,Q,uDA3BT,SAAkBgB,GAClB,QAAIA,EAAIC,eAAe,W,GAHHC,KAwCTC,cAAwB1B,GC3CvC2B,IAAS1B,OACP,cAAC,IAAM2B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6ed3c1a0.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection\n} from \"streamlit-component-lib\";\nimport Gallery from \"react-grid-gallery\";\nimport React, { ReactNode } from \"react\"\nclass ImageGrid extends StreamlitComponentBase{\n\n    IsValidJSONString(str:any):boolean {\n    if (str.hasOwnProperty('src')) {\n        return true;\n      }\n    return false;\n  }\n\n\n    public render = (): ReactNode => {\n    const imageClick = (e: any) => {\n          Streamlit.setComponentValue(urls[e])\n        }\n    const urls = this.props.args[\"urls\"];\n    const zoom = this.props.args[\"zoom\"];\n    const height = this.props.args[\"height\"]\n\n    var output_urls = []\n    if (urls.length >0 )\n    {\n    if (this.IsValidJSONString(urls[0])){\n      output_urls= urls.map(x => { return ({\"caption\":\"Yeah\",\"src\":x['src'],\"thumbnail\":x['src'],\"thumbnailWidth\":x['width'],\"thumbnailHeight\":x['height']})})\n    }else{\n      output_urls = urls.map(x => {return({\"src\": x,\"thumbnail\":x});});\n    }\n\n    }\n    else{\n      return \"None\"\n    }\n    return (<div style={{height: height, overflowY:\"auto\"}}>\n\n      <Gallery style={{width:\"auto\"}} maxRows={100} enableImageSelection={true} onClickThumbnail={imageClick} rowHeight={zoom} images={output_urls}/>\n\n      </div>)\n\n    }\n}\n\nexport default withStreamlitConnection(ImageGrid)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport ImageGrid from \"./ImageGrid\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ImageGrid />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}